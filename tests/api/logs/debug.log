DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:src.note_gen.routers.user_routes:Processing request: progression_name='C Major' note_pattern_name='Simple Triad' rhythm_pattern_name='quarter_notes' scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), scale_type='major')
DEBUG:src.note_gen.routers.user_routes:Checking progression: C Major
ERROR:src.note_gen.routers.user_routes:Invalid progression name: C Major
ERROR:src.note_gen.routers.user_routes:Error generating sequence: 422: Invalid progression name: C Major
INFO:httpx:HTTP Request: POST http://testserver/generate-sequence "HTTP/1.1 500 Internal Server Error"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:src.note_gen.routers.user_routes:Processing request: progression_name='I-IV-V' note_pattern_name='Simple Triad' rhythm_pattern_name='quarter_notes' scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), scale_type='major')
DEBUG:src.note_gen.routers.user_routes:Checking progression: I-IV-V
DEBUG:src.note_gen.routers.user_routes:Checking note pattern: Simple Triad
DEBUG:src.note_gen.routers.user_routes:Checking rhythm pattern: quarter_notes
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Generating chord for I
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Generating chord for IV
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Generating chord for V
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Created chord progression: scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), scale_type='major') chords=[Chord(root=C4, quality=ChordQualityType.MAJOR, notes=[Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='E', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=None)], inversion=0), Chord(root=F4, quality=ChordQualityType.MAJOR, notes=[Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='A', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None)], inversion=0), Chord(root=G4, quality=ChordQualityType.MAJOR, notes=[Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='B', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='D', octave=4, duration=1.0, velocity=64, stored_midi_number=None)], inversion=0)] root=None
ERROR:src.note_gen.routers.user_routes:Error generating sequence: 1 validation error for NoteSequenceGenerator
rhythm_pattern
  Input should be a valid dictionary or instance of RhythmPattern [type=model_type, input_value=RhythmPatternData(notes=[...ility=0.0, duration=4.0), input_type=RhythmPatternData]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
INFO:httpx:HTTP Request: POST http://testserver/generate-sequence "HTTP/1.1 500 Internal Server Error"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:src.note_gen.routers.user_routes:Processing request: progression_name='I-IV-V' note_pattern_name='Simple Triad' rhythm_pattern_name='quarter_notes' scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), scale_type='major')
DEBUG:src.note_gen.routers.user_routes:Checking progression: I-IV-V
DEBUG:src.note_gen.routers.user_routes:Checking note pattern: Simple Triad
DEBUG:src.note_gen.routers.user_routes:Checking rhythm pattern: quarter_notes
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Generating chord for I
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Generating chord for IV
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Generating chord for V
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Created chord progression: scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), scale_type='major') chords=[Chord(root=C4, quality=ChordQualityType.MAJOR, notes=[Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='E', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=None)], inversion=0), Chord(root=F4, quality=ChordQualityType.MAJOR, notes=[Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='A', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None)], inversion=0), Chord(root=G4, quality=ChordQualityType.MAJOR, notes=[Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='B', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='D', octave=4, duration=1.0, velocity=64, stored_midi_number=None)], inversion=0)] root=None
ERROR:src.note_gen.routers.user_routes:Error generating sequence: 1 validation error for NoteSequenceGenerator
rhythm_pattern
  Input should be a valid dictionary or instance of RhythmPattern [type=model_type, input_value=RhythmPatternData(notes=[...ility=0.0, duration=4.0), input_type=RhythmPatternData]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
INFO:httpx:HTTP Request: POST http://testserver/generate-sequence "HTTP/1.1 500 Internal Server Error"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:src.note_gen.routers.user_routes:Processing request: progression_name='I-IV-V' note_pattern_name='Simple Triad' rhythm_pattern_name='quarter_notes' scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), scale_type='major')
DEBUG:src.note_gen.routers.user_routes:Checking progression: I-IV-V
DEBUG:src.note_gen.routers.user_routes:Checking note pattern: Simple Triad
DEBUG:src.note_gen.routers.user_routes:Checking rhythm pattern: quarter_notes
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Generating chord for I
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Generating chord for IV
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Generating chord for V
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Created chord progression: scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), scale_type='major') chords=[Chord(root=C4, quality=ChordQualityType.MAJOR, notes=[Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='E', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=None)], inversion=0), Chord(root=F4, quality=ChordQualityType.MAJOR, notes=[Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='A', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None)], inversion=0), Chord(root=G4, quality=ChordQualityType.MAJOR, notes=[Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='B', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='D', octave=4, duration=1.0, velocity=64, stored_midi_number=None)], inversion=0)] root=None
ERROR:src.note_gen.routers.user_routes:Error generating sequence: 1 validation error for NoteSequenceGenerator
rhythm_pattern
  Input should be a valid dictionary or instance of RhythmPattern [type=model_type, input_value=RhythmPatternData(notes=[...ility=0.0, duration=4.0), input_type=RhythmPatternData]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
Traceback (most recent call last):
  File "/Users/bretbouchard/apps/Note-Gen/backend/src/note_gen/routers/user_routes.py", line 324, in generate_sequence
    note_sequence_generator = NoteSequenceGenerator(
                              ^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/bretbouchard/miniconda3/lib/python3.11/site-packages/pydantic/main.py", line 212, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 1 validation error for NoteSequenceGenerator
rhythm_pattern
  Input should be a valid dictionary or instance of RhythmPattern [type=model_type, input_value=RhythmPatternData(notes=[...ility=0.0, duration=4.0), input_type=RhythmPatternData]
    For further information visit https://errors.pydantic.dev/2.9/v/model_type
ERROR:src.note_gen.routers.user_routes:Request data: progression_name='I-IV-V' note_pattern_name='Simple Triad' rhythm_pattern_name='quarter_notes' scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), scale_type='major')
INFO:httpx:HTTP Request: POST http://testserver/generate-sequence "HTTP/1.1 500 Internal Server Error"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:src.note_gen.routers.user_routes:Processing request: progression_name='I-IV-V' note_pattern_name='Simple Triad' rhythm_pattern_name='quarter_notes' scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), scale_type='major')
DEBUG:src.note_gen.routers.user_routes:Checking progression: I-IV-V
DEBUG:src.note_gen.routers.user_routes:Checking note pattern: Simple Triad
DEBUG:src.note_gen.routers.user_routes:Checking rhythm pattern: quarter_notes
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Generating chord for I
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Generating chord for IV
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Generating chord for V
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Created chord progression: scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), scale_type='major') chords=[Chord(root=C4, quality=ChordQualityType.MAJOR, notes=[Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='E', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=None)], inversion=0), Chord(root=F4, quality=ChordQualityType.MAJOR, notes=[Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='A', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None)], inversion=0), Chord(root=G4, quality=ChordQualityType.MAJOR, notes=[Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='B', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='D', octave=4, duration=1.0, velocity=64, stored_midi_number=None)], inversion=0)] root=None
INFO:src.note_gen.models.rhythm_pattern:Validating pattern: '1 1 1 1'
INFO:src.note_gen.models.rhythm_pattern:Processing part: '1'
INFO:src.note_gen.models.rhythm_pattern:Processing part: '1'
INFO:src.note_gen.models.rhythm_pattern:Processing part: '1'
INFO:src.note_gen.models.rhythm_pattern:Processing part: '1'
DEBUG:src.note_gen.routers.user_routes:Generating note sequence...
DEBUG:src.note_gen.routers.user_routes:Generated notes: notes=[Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67)] events=[NoteEvent(note=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), position=0.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), position=1.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), position=2.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), position=3.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), position=0.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), position=1.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), position=2.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), position=3.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), position=0.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), position=1.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), position=2.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), position=3.0, duration=1.0, velocity=100, channel=0, is_rest=False)] duration=4.0
DEBUG:src.note_gen.routers.user_routes:Processing chord: Chord(root=C4, quality=ChordQualityType.MAJOR, notes=['C4', 'E4', 'G4'], inversion=0)
ERROR:src.note_gen.routers.user_routes:Error generating sequence: unsupported operand type(s) for +: 'Note' and 'int'
Traceback (most recent call last):
  File "/Users/bretbouchard/apps/Note-Gen/backend/src/note_gen/routers/user_routes.py", line 352, in generate_sequence
    note_pitch = root_note + interval  # Calculate the pitch
                 ~~~~~~~~~~^~~~~~~~~~
TypeError: unsupported operand type(s) for +: 'Note' and 'int'
ERROR:src.note_gen.routers.user_routes:Request data: progression_name='I-IV-V' note_pattern_name='Simple Triad' rhythm_pattern_name='quarter_notes' scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), scale_type='major')
INFO:httpx:HTTP Request: POST http://testserver/generate-sequence "HTTP/1.1 500 Internal Server Error"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:src.note_gen.routers.user_routes:Processing request: progression_name='I-IV-V' note_pattern_name='Simple Triad' rhythm_pattern_name='quarter_notes' scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), scale_type='major')
DEBUG:src.note_gen.routers.user_routes:Checking progression: I-IV-V
DEBUG:src.note_gen.routers.user_routes:Checking note pattern: Simple Triad
DEBUG:src.note_gen.routers.user_routes:Checking rhythm pattern: quarter_notes
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Generating chord for I
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Generating chord for IV
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Generating chord for V
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Created chord progression: scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), scale_type='major') chords=[Chord(root=C4, quality=ChordQualityType.MAJOR, notes=[Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='E', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=None)], inversion=0), Chord(root=F4, quality=ChordQualityType.MAJOR, notes=[Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='A', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None)], inversion=0), Chord(root=G4, quality=ChordQualityType.MAJOR, notes=[Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='B', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='D', octave=4, duration=1.0, velocity=64, stored_midi_number=None)], inversion=0)] root=None
INFO:src.note_gen.models.rhythm_pattern:Validating pattern: '1 1 1 1'
INFO:src.note_gen.models.rhythm_pattern:Processing part: '1'
INFO:src.note_gen.models.rhythm_pattern:Processing part: '1'
INFO:src.note_gen.models.rhythm_pattern:Processing part: '1'
INFO:src.note_gen.models.rhythm_pattern:Processing part: '1'
DEBUG:src.note_gen.routers.user_routes:Generating note sequence...
DEBUG:src.note_gen.routers.user_routes:Generated notes: notes=[Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67)] events=[NoteEvent(note=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), position=0.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), position=1.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), position=2.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), position=3.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), position=0.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), position=1.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), position=2.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), position=3.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), position=0.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), position=1.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), position=2.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), position=3.0, duration=1.0, velocity=100, channel=0, is_rest=False)] duration=4.0
DEBUG:src.note_gen.routers.user_routes:Processing chord: Chord(root=C4, quality=ChordQualityType.MAJOR, notes=['C4', 'E4', 'G4'], inversion=0)
ERROR:src.note_gen.routers.user_routes:Error generating sequence: unsupported operand type(s) for +: 'NoneType' and 'int'
Traceback (most recent call last):
  File "/Users/bretbouchard/apps/Note-Gen/backend/src/note_gen/routers/user_routes.py", line 352, in generate_sequence
    note_pitch = root_note + interval  # Calculate the pitch
                 ~~~~~~~~~~^~~~~~~~~~
TypeError: unsupported operand type(s) for +: 'NoneType' and 'int'
ERROR:src.note_gen.routers.user_routes:Request data: progression_name='I-IV-V' note_pattern_name='Simple Triad' rhythm_pattern_name='quarter_notes' scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), scale_type='major')
INFO:httpx:HTTP Request: POST http://testserver/generate-sequence "HTTP/1.1 500 Internal Server Error"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:src.note_gen.routers.user_routes:Processing request: progression_name='I-IV-V' note_pattern_name='Simple Triad' rhythm_pattern_name='quarter_notes' scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), scale_type='major')
DEBUG:src.note_gen.routers.user_routes:Checking progression: I-IV-V
DEBUG:src.note_gen.routers.user_routes:Checking note pattern: Simple Triad
DEBUG:src.note_gen.routers.user_routes:Checking rhythm pattern: quarter_notes
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Generating chord for I
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Generating chord for IV
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Generating chord for V
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Created chord progression: scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), scale_type='major') chords=[Chord(root=C4, quality=ChordQualityType.MAJOR, notes=[Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='E', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=None)], inversion=0), Chord(root=F4, quality=ChordQualityType.MAJOR, notes=[Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='A', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None)], inversion=0), Chord(root=G4, quality=ChordQualityType.MAJOR, notes=[Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='B', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='D', octave=4, duration=1.0, velocity=64, stored_midi_number=None)], inversion=0)] root=None
INFO:src.note_gen.models.rhythm_pattern:Validating pattern: '1 1 1 1'
INFO:src.note_gen.models.rhythm_pattern:Processing part: '1'
INFO:src.note_gen.models.rhythm_pattern:Processing part: '1'
INFO:src.note_gen.models.rhythm_pattern:Processing part: '1'
INFO:src.note_gen.models.rhythm_pattern:Processing part: '1'
DEBUG:src.note_gen.routers.user_routes:Generating note sequence...
DEBUG:src.note_gen.routers.user_routes:Generated notes: notes=[Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67)] events=[NoteEvent(note=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), position=0.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), position=1.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), position=2.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), position=3.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), position=0.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), position=1.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), position=2.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), position=3.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), position=0.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), position=1.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), position=2.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), position=3.0, duration=1.0, velocity=100, channel=0, is_rest=False)] duration=4.0
ERROR:src.note_gen.routers.user_routes:Root note is None for chord: Chord(root=C4, quality=ChordQualityType.MAJOR, notes=['C4', 'E4', 'G4'], inversion=0)
ERROR:src.note_gen.routers.user_routes:Error generating sequence: 422: Invalid root note
Traceback (most recent call last):
  File "/Users/bretbouchard/apps/Note-Gen/backend/src/note_gen/routers/user_routes.py", line 351, in generate_sequence
    raise HTTPException(status_code=422, detail="Invalid root note")  # Raise error for invalid root note
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
fastapi.exceptions.HTTPException: 422: Invalid root note
ERROR:src.note_gen.routers.user_routes:Request data: progression_name='I-IV-V' note_pattern_name='Simple Triad' rhythm_pattern_name='quarter_notes' scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), scale_type='major')
INFO:httpx:HTTP Request: POST http://testserver/generate-sequence "HTTP/1.1 500 Internal Server Error"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:src.note_gen.routers.user_routes:Processing request: progression_name='I-IV-V' note_pattern_name='Simple Triad' rhythm_pattern_name='quarter_notes' scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), scale_type='major')
DEBUG:src.note_gen.routers.user_routes:Checking progression: I-IV-V
DEBUG:src.note_gen.routers.user_routes:Checking note pattern: Simple Triad
DEBUG:src.note_gen.routers.user_routes:Checking rhythm pattern: quarter_notes
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Generating chord for I
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Generating chord for IV
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Generating chord for V
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Created chord progression: scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), scale_type='major') chords=[Chord(root=C4, quality=ChordQualityType.MAJOR, notes=[Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), Note(note_name='E', octave=4, duration=1.0, velocity=64, stored_midi_number=64), Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67)], inversion=0), Chord(root=F4, quality=ChordQualityType.MAJOR, notes=[Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), Note(note_name='A', octave=4, duration=1.0, velocity=64, stored_midi_number=69), Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60)], inversion=0), Chord(root=G4, quality=ChordQualityType.MAJOR, notes=[Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), Note(note_name='B', octave=4, duration=1.0, velocity=64, stored_midi_number=71), Note(note_name='D', octave=4, duration=1.0, velocity=64, stored_midi_number=62)], inversion=0)] root=None
INFO:src.note_gen.models.rhythm_pattern:Validating pattern: '1 1 1 1'
INFO:src.note_gen.models.rhythm_pattern:Processing part: '1'
INFO:src.note_gen.models.rhythm_pattern:Processing part: '1'
INFO:src.note_gen.models.rhythm_pattern:Processing part: '1'
INFO:src.note_gen.models.rhythm_pattern:Processing part: '1'
DEBUG:src.note_gen.routers.user_routes:Generating note sequence...
DEBUG:src.note_gen.routers.user_routes:Generated notes: notes=[Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67)] events=[NoteEvent(note=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), position=0.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), position=1.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), position=2.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), position=3.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), position=0.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), position=1.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), position=2.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), position=3.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), position=0.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), position=1.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), position=2.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), position=3.0, duration=1.0, velocity=100, channel=0, is_rest=False)] duration=4.0
DEBUG:src.note_gen.routers.user_routes:Processing chord: Chord(root=C4, quality=ChordQualityType.MAJOR, notes=['C4', 'E4', 'G4'], inversion=0)
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 60
ERROR:src.note_gen.routers.user_routes:Error generating sequence: name 'get_note_name' is not defined
Traceback (most recent call last):
  File "/Users/bretbouchard/apps/Note-Gen/backend/src/note_gen/routers/user_routes.py", line 358, in generate_sequence
    note_name=get_note_name(note_pitch),
              ^^^^^^^^^^^^^
NameError: name 'get_note_name' is not defined
ERROR:src.note_gen.routers.user_routes:Request data: progression_name='I-IV-V' note_pattern_name='Simple Triad' rhythm_pattern_name='quarter_notes' scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), scale_type='major')
INFO:httpx:HTTP Request: POST http://testserver/generate-sequence "HTTP/1.1 500 Internal Server Error"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:src.note_gen.routers.user_routes:Processing request: progression_name='I-IV-V' note_pattern_name='Simple Triad' rhythm_pattern_name='quarter_notes' scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), scale_type='major')
DEBUG:src.note_gen.routers.user_routes:Checking progression: I-IV-V
DEBUG:src.note_gen.routers.user_routes:Checking note pattern: Simple Triad
DEBUG:src.note_gen.routers.user_routes:Checking rhythm pattern: quarter_notes
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Generating chord for I
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Generating chord for IV
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Generating chord for V
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Created chord progression: scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), scale_type='major') chords=[Chord(root=C4, quality=ChordQualityType.MAJOR, notes=[Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), Note(note_name='E', octave=4, duration=1.0, velocity=64, stored_midi_number=64), Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67)], inversion=0), Chord(root=F4, quality=ChordQualityType.MAJOR, notes=[Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), Note(note_name='A', octave=4, duration=1.0, velocity=64, stored_midi_number=69), Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60)], inversion=0), Chord(root=G4, quality=ChordQualityType.MAJOR, notes=[Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), Note(note_name='B', octave=4, duration=1.0, velocity=64, stored_midi_number=71), Note(note_name='D', octave=4, duration=1.0, velocity=64, stored_midi_number=62)], inversion=0)] root=None
INFO:src.note_gen.models.rhythm_pattern:Validating pattern: '1 1 1 1'
INFO:src.note_gen.models.rhythm_pattern:Processing part: '1'
INFO:src.note_gen.models.rhythm_pattern:Processing part: '1'
INFO:src.note_gen.models.rhythm_pattern:Processing part: '1'
INFO:src.note_gen.models.rhythm_pattern:Processing part: '1'
DEBUG:src.note_gen.routers.user_routes:Generating note sequence...
DEBUG:src.note_gen.routers.user_routes:Generated notes: notes=[Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67)] events=[NoteEvent(note=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), position=0.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), position=1.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), position=2.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), position=3.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), position=0.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), position=1.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), position=2.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), position=3.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), position=0.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), position=1.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), position=2.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), position=3.0, duration=1.0, velocity=100, channel=0, is_rest=False)] duration=4.0
DEBUG:src.note_gen.routers.user_routes:Processing chord: Chord(root=C4, quality=ChordQualityType.MAJOR, notes=['C4', 'E4', 'G4'], inversion=0)
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 60
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 62
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 64
DEBUG:src.note_gen.routers.user_routes:Processing chord: Chord(root=F4, quality=ChordQualityType.MAJOR, notes=['F4', 'A4', 'C4'], inversion=0)
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 65
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 67
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 69
DEBUG:src.note_gen.routers.user_routes:Processing chord: Chord(root=G4, quality=ChordQualityType.MAJOR, notes=['G4', 'B4', 'D4'], inversion=0)
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 67
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 69
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 71
DEBUG:src.note_gen.routers.user_routes:Response notes: [GeneratedNote(note_name='C4', octave=4, duration=1.0, position=0.0, velocity=100), GeneratedNote(note_name='D4', octave=4, duration=1.0, position=1.0, velocity=100), GeneratedNote(note_name='E4', octave=4, duration=1.0, position=2.0, velocity=100), GeneratedNote(note_name='F4', octave=4, duration=1.0, position=3.0, velocity=100), GeneratedNote(note_name='G4', octave=4, duration=1.0, position=4.0, velocity=100), GeneratedNote(note_name='A4', octave=4, duration=1.0, position=5.0, velocity=100), GeneratedNote(note_name='G4', octave=4, duration=1.0, position=6.0, velocity=100), GeneratedNote(note_name='A4', octave=4, duration=1.0, position=7.0, velocity=100), GeneratedNote(note_name='B4', octave=4, duration=1.0, position=8.0, velocity=100)]
INFO:httpx:HTTP Request: POST http://testserver/generate-sequence "HTTP/1.1 200 OK"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:src.note_gen.routers.user_routes:Processing request: progression_name='I-IV-V' note_pattern_name='Simple Triad' rhythm_pattern_name='quarter_notes' scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), scale_type='major')
DEBUG:src.note_gen.routers.user_routes:Checking progression: I-IV-V
DEBUG:src.note_gen.routers.user_routes:Checking note pattern: Simple Triad
DEBUG:src.note_gen.routers.user_routes:Checking rhythm pattern: quarter_notes
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Generating chord for I
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Generating chord for IV
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Generating chord for V
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Created chord progression: scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), scale_type='major') chords=[Chord(root=C4, quality=ChordQualityType.MAJOR, notes=[Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), Note(note_name='E', octave=4, duration=1.0, velocity=64, stored_midi_number=64), Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67)], inversion=0), Chord(root=F4, quality=ChordQualityType.MAJOR, notes=[Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), Note(note_name='A', octave=4, duration=1.0, velocity=64, stored_midi_number=69), Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60)], inversion=0), Chord(root=G4, quality=ChordQualityType.MAJOR, notes=[Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), Note(note_name='B', octave=4, duration=1.0, velocity=64, stored_midi_number=71), Note(note_name='D', octave=4, duration=1.0, velocity=64, stored_midi_number=62)], inversion=0)] root=None
INFO:src.note_gen.models.rhythm_pattern:Validating pattern: '1 1 1 1'
INFO:src.note_gen.models.rhythm_pattern:Processing part: '1'
INFO:src.note_gen.models.rhythm_pattern:Processing part: '1'
INFO:src.note_gen.models.rhythm_pattern:Processing part: '1'
INFO:src.note_gen.models.rhythm_pattern:Processing part: '1'
DEBUG:src.note_gen.routers.user_routes:Generating note sequence...
DEBUG:src.note_gen.routers.user_routes:Generated notes: notes=[Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67)] events=[NoteEvent(note=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), position=0.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), position=1.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), position=2.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=60), position=3.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), position=0.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), position=1.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), position=2.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='F', octave=4, duration=1.0, velocity=64, stored_midi_number=65), position=3.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), position=0.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), position=1.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), position=2.0, duration=1.0, velocity=100, channel=0, is_rest=False), NoteEvent(note=Note(note_name='G', octave=4, duration=1.0, velocity=64, stored_midi_number=67), position=3.0, duration=1.0, velocity=100, channel=0, is_rest=False)] duration=4.0
DEBUG:src.note_gen.routers.user_routes:Processing chord: Chord(root=C4, quality=ChordQualityType.MAJOR, notes=['C4', 'E4', 'G4'], inversion=0)
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 60
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 62
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 64
DEBUG:src.note_gen.routers.user_routes:Processing chord: Chord(root=F4, quality=ChordQualityType.MAJOR, notes=['F4', 'A4', 'C4'], inversion=0)
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 65
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 67
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 69
DEBUG:src.note_gen.routers.user_routes:Processing chord: Chord(root=G4, quality=ChordQualityType.MAJOR, notes=['G4', 'B4', 'D4'], inversion=0)
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 67
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 69
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 71
DEBUG:src.note_gen.routers.user_routes:Response notes: [GeneratedNote(note_name='C4', octave=4, duration=1.0, position=0.0, velocity=100), GeneratedNote(note_name='D4', octave=4, duration=1.0, position=1.0, velocity=100), GeneratedNote(note_name='E4', octave=4, duration=1.0, position=2.0, velocity=100), GeneratedNote(note_name='F4', octave=4, duration=1.0, position=3.0, velocity=100), GeneratedNote(note_name='G4', octave=4, duration=1.0, position=4.0, velocity=100), GeneratedNote(note_name='A4', octave=4, duration=1.0, position=5.0, velocity=100), GeneratedNote(note_name='G4', octave=4, duration=1.0, position=6.0, velocity=100), GeneratedNote(note_name='A4', octave=4, duration=1.0, position=7.0, velocity=100), GeneratedNote(note_name='B4', octave=4, duration=1.0, position=8.0, velocity=100)]
INFO:httpx:HTTP Request: POST http://testserver/generate-sequence "HTTP/1.1 200 OK"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be5"}, "message": "Starting topology monitoring"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be5"}, "previousDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be5, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be5, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be5"}, "serverHost": "localhost", "serverPort": 27017, "message": "Starting server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be5"}, "message": "Connection pool created", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be5"}, "driverConnectionId": 1, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be5"}, "driverConnectionId": 1, "serverConnectionId": 7895, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "durationMS": 0.5823330720886588, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67764754e3739c3682e74a06\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-01-14T01:27:58.223Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 7895, \"maxWireVersion\": 17, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be5"}, "message": "Connection pool ready", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be5"}, "previousDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be5, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be5, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0005823330720886588>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be5"}, "driverConnectionId": 1, "serverConnectionId": 7895, "serverHost": "localhost", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
INFO:httpx:HTTP Request: GET http://testserver/chord-progressions "HTTP/1.1 200 OK"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
INFO:httpx:HTTP Request: GET http://testserver/note-patterns "HTTP/1.1 200 OK"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
INFO:httpx:HTTP Request: GET http://testserver/rhythm-patterns "HTTP/1.1 200 OK"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
INFO:httpx:HTTP Request: POST http://testserver/generate-chord-progression "HTTP/1.1 200 OK"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
INFO:httpx:HTTP Request: GET http://testserver/invalid-endpoint "HTTP/1.1 404 Not Found"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be7"}, "message": "Starting topology monitoring"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be7"}, "previousDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be7, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be7, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be7"}, "serverHost": "localhost", "serverPort": 27017, "message": "Starting server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be7"}, "message": "Connection pool created", "serverHost": "localhost", "serverPort": 27017}
DEBUG:src.note_gen.routers.user_routes:Processing request: progression_name='I-IV-V-I' note_pattern_name='Simple Triad' rhythm_pattern_name='quarter_notes' scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), scale_type='major')
DEBUG:src.note_gen.routers.user_routes:Checking progression: I-IV-V-I
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be7"}, "driverConnectionId": 1, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
DEBUG:src.note_gen.routers.user_routes:Checking note pattern: Simple Triad
DEBUG:src.note_gen.routers.user_routes:Checking rhythm pattern: quarter_notes
DEBUG:src.note_gen.routers.user_routes:Root note: 60
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Chord root: 60
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be7"}, "driverConnectionId": 1, "serverConnectionId": 7897, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "durationMS": 1.0772089008241892, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67764754e3739c3682e74a06\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-01-14T01:27:58.273Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 7897, \"maxWireVersion\": 17, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 60
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be7"}, "message": "Connection pool ready", "serverHost": "localhost", "serverPort": 27017}
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 62
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be7"}, "previousDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be7, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be7, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0010772089008241892>]>", "message": "Topology description changed"}
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 64
DEBUG:src.note_gen.routers.user_routes:Chord root: 65
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be7"}, "driverConnectionId": 1, "serverConnectionId": 7897, "serverHost": "localhost", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 65
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 67
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 69
DEBUG:src.note_gen.routers.user_routes:Chord root: 67
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 67
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 69
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 71
DEBUG:src.note_gen.routers.user_routes:Chord root: 60
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 60
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 62
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 64
DEBUG:src.note_gen.routers.user_routes:Response notes: [GeneratedNote(note_name='C', octave=4, duration=1.0, position=0.0, velocity=100), GeneratedNote(note_name='D', octave=4, duration=1.0, position=1.0, velocity=100), GeneratedNote(note_name='E', octave=4, duration=1.0, position=2.0, velocity=100), GeneratedNote(note_name='F', octave=4, duration=1.0, position=3.0, velocity=100), GeneratedNote(note_name='G', octave=4, duration=1.0, position=4.0, velocity=100), GeneratedNote(note_name='A', octave=4, duration=1.0, position=5.0, velocity=100), GeneratedNote(note_name='G', octave=4, duration=1.0, position=6.0, velocity=100), GeneratedNote(note_name='A', octave=4, duration=1.0, position=7.0, velocity=100), GeneratedNote(note_name='B', octave=4, duration=1.0, position=8.0, velocity=100), GeneratedNote(note_name='C', octave=4, duration=1.0, position=9.0, velocity=100), GeneratedNote(note_name='D', octave=4, duration=1.0, position=10.0, velocity=100), GeneratedNote(note_name='E', octave=4, duration=1.0, position=11.0, velocity=100)]
INFO:httpx:HTTP Request: POST http://testserver/generate-sequence "HTTP/1.1 200 OK"
DEBUG:pymongo.serverSelection:{"message": "Server selection started", "selector": "<function writable_server_selector at 0x10677f420>", "operation": "dropDatabase", "topologyDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be7, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0010772089008241892>]>", "clientId": {"$oid": "6785bd9e59dc2deea0c22be7"}}
DEBUG:pymongo.serverSelection:{"message": "Server selection succeeded", "selector": "<function writable_server_selector at 0x10677f420>", "operation": "dropDatabase", "topologyDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be7, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0010772089008241892>]>", "clientId": {"$oid": "6785bd9e59dc2deea0c22be7"}, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be7"}, "message": "Connection checkout started", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be7"}, "message": "Connection created", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be7"}, "message": "Connection ready", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.00033850001636892557}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be7"}, "message": "Connection checked out", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0009407090255990624}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be7"}, "message": "Command started", "command": "{\"dropDatabase\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"cSyNMuz/QeCdjOM5lf0xnw==\", \"subType\": \"04\"}}}, \"$db\": \"test_note_gen\"}", "commandName": "dropDatabase", "databaseName": "test_note_gen", "requestId": 1457850878, "operationId": 1457850878, "driverConnectionId": 1, "serverConnectionId": 7899, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be7"}, "message": "Command succeeded", "durationMS": 0.414, "reply": "{\"ok\": 1.0}", "commandName": "dropDatabase", "databaseName": "test_note_gen", "requestId": 1457850878, "operationId": 1457850878, "driverConnectionId": 1, "serverConnectionId": 7899, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be7"}, "message": "Connection checked in", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.serverSelection:{"message": "Server selection started", "selector": "PrimaryPreferred(tag_sets=None, max_staleness=-1, hedge=None)", "operation": "endSessions", "topologyDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be7, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0010772089008241892>]>", "clientId": {"$oid": "6785bd9e59dc2deea0c22be7"}}
DEBUG:pymongo.serverSelection:{"message": "Server selection succeeded", "selector": "PrimaryPreferred(tag_sets=None, max_staleness=-1, hedge=None)", "operation": "endSessions", "topologyDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be7, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0010772089008241892>]>", "clientId": {"$oid": "6785bd9e59dc2deea0c22be7"}, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be7"}, "message": "Connection checkout started", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be7"}, "message": "Connection checked out", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 9.183399379253387e-05}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be7"}, "message": "Command started", "command": "{\"endSessions\": [{\"id\": {\"$binary\": {\"base64\": \"cSyNMuz/QeCdjOM5lf0xnw==\", \"subType\": \"04\"}}}], \"$db\": \"admin\"}", "commandName": "endSessions", "databaseName": "admin", "requestId": 1458777923, "operationId": 1458777923, "driverConnectionId": 1, "serverConnectionId": 7899, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be7"}, "message": "Command succeeded", "durationMS": 0.27799999999999997, "reply": "{\"ok\": 1.0}", "commandName": "endSessions", "databaseName": "admin", "requestId": 1458777923, "operationId": 1458777923, "driverConnectionId": 1, "serverConnectionId": 7899, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be7"}, "message": "Connection checked in", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be7"}, "serverHost": "localhost", "serverPort": 27017, "message": "Stopped server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be7"}, "message": "Connection closed", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "reason": "Connection pool was closed", "error": "poolClosed"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be7"}, "message": "Connection pool closed", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be7"}, "previousDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be7, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0010772089008241892>]>", "newDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be7, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be7"}, "message": "Stopped topology monitoring"}
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be8"}, "message": "Starting topology monitoring"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be8"}, "previousDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be8, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be8, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be8"}, "serverHost": "localhost", "serverPort": 27017, "message": "Starting server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be8"}, "message": "Connection pool created", "serverHost": "localhost", "serverPort": 27017}
DEBUG:src.note_gen.routers.user_routes:Processing request: progression_name='INVALID' note_pattern_name='Simple Triad' rhythm_pattern_name='quarter_notes' scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), scale_type='major')
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be8"}, "driverConnectionId": 1, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
DEBUG:src.note_gen.routers.user_routes:Checking progression: INVALID
ERROR:src.note_gen.routers.user_routes:Invalid progression name: INVALID
ERROR:src.note_gen.routers.user_routes:Error generating sequence: 422: Invalid progression name: INVALID
Traceback (most recent call last):
  File "/Users/bretbouchard/apps/Note-Gen/backend/src/note_gen/routers/user_routes.py", line 309, in generate_sequence
    raise HTTPException(status_code=422, detail=f"Invalid progression name: {request.progression_name}")
fastapi.exceptions.HTTPException: 422: Invalid progression name: INVALID
ERROR:src.note_gen.routers.user_routes:Request data: progression_name='INVALID' note_pattern_name='Simple Triad' rhythm_pattern_name='quarter_notes' scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), scale_type='major')
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be8"}, "driverConnectionId": 1, "serverConnectionId": 7900, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "durationMS": 0.8544579613953829, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67764754e3739c3682e74a06\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-01-14T01:27:58.293Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 7900, \"maxWireVersion\": 17, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be8"}, "message": "Connection pool ready", "serverHost": "localhost", "serverPort": 27017}
INFO:httpx:HTTP Request: POST http://testserver/generate-sequence "HTTP/1.1 422 Unprocessable Entity"
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be8"}, "previousDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be8, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be8, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0008544579613953829>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be8"}, "driverConnectionId": 1, "serverConnectionId": 7900, "serverHost": "localhost", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
DEBUG:pymongo.serverSelection:{"message": "Server selection started", "selector": "<function writable_server_selector at 0x10677f420>", "operation": "dropDatabase", "topologyDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be8, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0008544579613953829>]>", "clientId": {"$oid": "6785bd9e59dc2deea0c22be8"}}
DEBUG:pymongo.serverSelection:{"message": "Server selection succeeded", "selector": "<function writable_server_selector at 0x10677f420>", "operation": "dropDatabase", "topologyDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be8, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0008544579613953829>]>", "clientId": {"$oid": "6785bd9e59dc2deea0c22be8"}, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be8"}, "message": "Connection checkout started", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be8"}, "message": "Connection created", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be8"}, "message": "Connection ready", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0002959580160677433}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be8"}, "message": "Connection checked out", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0010260420385748148}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be8"}, "message": "Command started", "command": "{\"dropDatabase\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"8YGAIVh+TGqOCK2LWRgv7A==\", \"subType\": \"04\"}}}, \"$db\": \"test_note_gen\"}", "commandName": "dropDatabase", "databaseName": "test_note_gen", "requestId": 74243042, "operationId": 74243042, "driverConnectionId": 1, "serverConnectionId": 7902, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be8"}, "message": "Command succeeded", "durationMS": 0.34, "reply": "{\"ok\": 1.0}", "commandName": "dropDatabase", "databaseName": "test_note_gen", "requestId": 74243042, "operationId": 74243042, "driverConnectionId": 1, "serverConnectionId": 7902, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be8"}, "message": "Connection checked in", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.serverSelection:{"message": "Server selection started", "selector": "PrimaryPreferred(tag_sets=None, max_staleness=-1, hedge=None)", "operation": "endSessions", "topologyDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be8, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0008544579613953829>]>", "clientId": {"$oid": "6785bd9e59dc2deea0c22be8"}}
DEBUG:pymongo.serverSelection:{"message": "Server selection succeeded", "selector": "PrimaryPreferred(tag_sets=None, max_staleness=-1, hedge=None)", "operation": "endSessions", "topologyDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be8, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0008544579613953829>]>", "clientId": {"$oid": "6785bd9e59dc2deea0c22be8"}, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be8"}, "message": "Connection checkout started", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be8"}, "message": "Connection checked out", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 9.095796849578619e-05}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be8"}, "message": "Command started", "command": "{\"endSessions\": [{\"id\": {\"$binary\": {\"base64\": \"8YGAIVh+TGqOCK2LWRgv7A==\", \"subType\": \"04\"}}}], \"$db\": \"admin\"}", "commandName": "endSessions", "databaseName": "admin", "requestId": 114807987, "operationId": 114807987, "driverConnectionId": 1, "serverConnectionId": 7902, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be8"}, "message": "Command succeeded", "durationMS": 0.27099999999999996, "reply": "{\"ok\": 1.0}", "commandName": "endSessions", "databaseName": "admin", "requestId": 114807987, "operationId": 114807987, "driverConnectionId": 1, "serverConnectionId": 7902, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be8"}, "message": "Connection checked in", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be8"}, "serverHost": "localhost", "serverPort": 27017, "message": "Stopped server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be8"}, "message": "Connection closed", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "reason": "Connection pool was closed", "error": "poolClosed"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be8"}, "message": "Connection pool closed", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be8"}, "previousDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be8, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0008544579613953829>]>", "newDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be8, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be8"}, "message": "Stopped topology monitoring"}
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be9"}, "message": "Starting topology monitoring"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be9"}, "previousDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be9, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be9, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be9"}, "serverHost": "localhost", "serverPort": 27017, "message": "Starting server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be9"}, "message": "Connection pool created", "serverHost": "localhost", "serverPort": 27017}
DEBUG:src.note_gen.routers.user_routes:Processing request: progression_name='I-IV-V-I' note_pattern_name='INVALID' rhythm_pattern_name='quarter_notes' scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), scale_type='major')
DEBUG:src.note_gen.routers.user_routes:Checking progression: I-IV-V-I
DEBUG:src.note_gen.routers.user_routes:Checking note pattern: INVALID
ERROR:src.note_gen.routers.user_routes:Invalid note pattern name: INVALID
ERROR:src.note_gen.routers.user_routes:Error generating sequence: 422: Invalid note pattern name: INVALID
Traceback (most recent call last):
  File "/Users/bretbouchard/apps/Note-Gen/backend/src/note_gen/routers/user_routes.py", line 315, in generate_sequence
    raise HTTPException(status_code=422, detail=f"Invalid note pattern name: {request.note_pattern_name}")
fastapi.exceptions.HTTPException: 422: Invalid note pattern name: INVALID
ERROR:src.note_gen.routers.user_routes:Request data: progression_name='I-IV-V-I' note_pattern_name='INVALID' rhythm_pattern_name='quarter_notes' scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), scale_type='major')
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be9"}, "driverConnectionId": 1, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
INFO:httpx:HTTP Request: POST http://testserver/generate-sequence "HTTP/1.1 422 Unprocessable Entity"
DEBUG:pymongo.serverSelection:{"message": "Server selection started", "selector": "<function writable_server_selector at 0x10677f420>", "operation": "dropDatabase", "topologyDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be9, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "6785bd9e59dc2deea0c22be9"}}
DEBUG:pymongo.serverSelection:{"message": "Waiting for suitable server to become available", "selector": "<function writable_server_selector at 0x10677f420>", "operation": "dropDatabase", "topologyDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be9, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "6785bd9e59dc2deea0c22be9"}, "remainingTimeMS": 29}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be9"}, "driverConnectionId": 1, "serverConnectionId": 7903, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "durationMS": 0.7932500448077917, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67764754e3739c3682e74a06\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-01-14T01:27:58.315Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 7903, \"maxWireVersion\": 17, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be9"}, "message": "Connection pool ready", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be9"}, "previousDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be9, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be9, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0007932500448077917>]>", "message": "Topology description changed"}
DEBUG:pymongo.serverSelection:{"message": "Server selection succeeded", "selector": "<function writable_server_selector at 0x10677f420>", "operation": "dropDatabase", "topologyDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be9, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0007932500448077917>]>", "clientId": {"$oid": "6785bd9e59dc2deea0c22be9"}, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be9"}, "message": "Connection checkout started", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be9"}, "message": "Connection created", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be9"}, "driverConnectionId": 1, "serverConnectionId": 7903, "serverHost": "localhost", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be9"}, "message": "Connection ready", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.00031029200181365013}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be9"}, "message": "Connection checked out", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0010552919702604413}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be9"}, "message": "Command started", "command": "{\"dropDatabase\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"+lOnTL4YTr+aeDLBmrqePw==\", \"subType\": \"04\"}}}, \"$db\": \"test_note_gen\"}", "commandName": "dropDatabase", "databaseName": "test_note_gen", "requestId": 143542612, "operationId": 143542612, "driverConnectionId": 1, "serverConnectionId": 7905, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be9"}, "message": "Command succeeded", "durationMS": 0.395, "reply": "{\"ok\": 1.0}", "commandName": "dropDatabase", "databaseName": "test_note_gen", "requestId": 143542612, "operationId": 143542612, "driverConnectionId": 1, "serverConnectionId": 7905, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be9"}, "message": "Connection checked in", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.serverSelection:{"message": "Server selection started", "selector": "PrimaryPreferred(tag_sets=None, max_staleness=-1, hedge=None)", "operation": "endSessions", "topologyDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be9, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0007932500448077917>]>", "clientId": {"$oid": "6785bd9e59dc2deea0c22be9"}}
DEBUG:pymongo.serverSelection:{"message": "Server selection succeeded", "selector": "PrimaryPreferred(tag_sets=None, max_staleness=-1, hedge=None)", "operation": "endSessions", "topologyDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be9, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0007932500448077917>]>", "clientId": {"$oid": "6785bd9e59dc2deea0c22be9"}, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be9"}, "message": "Connection checkout started", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be9"}, "message": "Connection checked out", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 8.804199751466513e-05}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be9"}, "message": "Command started", "command": "{\"endSessions\": [{\"id\": {\"$binary\": {\"base64\": \"+lOnTL4YTr+aeDLBmrqePw==\", \"subType\": \"04\"}}}], \"$db\": \"admin\"}", "commandName": "endSessions", "databaseName": "admin", "requestId": 896544303, "operationId": 896544303, "driverConnectionId": 1, "serverConnectionId": 7905, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be9"}, "message": "Command succeeded", "durationMS": 0.285, "reply": "{\"ok\": 1.0}", "commandName": "endSessions", "databaseName": "admin", "requestId": 896544303, "operationId": 896544303, "driverConnectionId": 1, "serverConnectionId": 7905, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be9"}, "message": "Connection checked in", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be9"}, "serverHost": "localhost", "serverPort": 27017, "message": "Stopped server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be9"}, "message": "Connection closed", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "reason": "Connection pool was closed", "error": "poolClosed"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22be9"}, "message": "Connection pool closed", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be9"}, "previousDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be9, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0007932500448077917>]>", "newDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22be9, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be9"}, "message": "Stopped topology monitoring"}
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bea"}, "message": "Starting topology monitoring"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bea"}, "previousDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bea, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bea, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bea"}, "serverHost": "localhost", "serverPort": 27017, "message": "Starting server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bea"}, "message": "Connection pool created", "serverHost": "localhost", "serverPort": 27017}
DEBUG:src.note_gen.routers.user_routes:Processing request: progression_name='I-IV-V-I' note_pattern_name='Simple Triad' rhythm_pattern_name='INVALID' scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), scale_type='major')
DEBUG:src.note_gen.routers.user_routes:Checking progression: I-IV-V-I
DEBUG:src.note_gen.routers.user_routes:Checking note pattern: Simple Triad
DEBUG:src.note_gen.routers.user_routes:Checking rhythm pattern: INVALID
ERROR:src.note_gen.routers.user_routes:Invalid rhythm pattern name: INVALID
ERROR:src.note_gen.routers.user_routes:Error generating sequence: 422: Invalid rhythm pattern name: INVALID
Traceback (most recent call last):
  File "/Users/bretbouchard/apps/Note-Gen/backend/src/note_gen/routers/user_routes.py", line 321, in generate_sequence
    raise HTTPException(status_code=422, detail=f"Invalid rhythm pattern name: {request.rhythm_pattern_name}")
fastapi.exceptions.HTTPException: 422: Invalid rhythm pattern name: INVALID
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bea"}, "driverConnectionId": 1, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
ERROR:src.note_gen.routers.user_routes:Request data: progression_name='I-IV-V-I' note_pattern_name='Simple Triad' rhythm_pattern_name='INVALID' scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), scale_type='major')
INFO:httpx:HTTP Request: POST http://testserver/generate-sequence "HTTP/1.1 422 Unprocessable Entity"
DEBUG:pymongo.serverSelection:{"message": "Server selection started", "selector": "<function writable_server_selector at 0x10677f420>", "operation": "dropDatabase", "topologyDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bea, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "6785bd9e59dc2deea0c22bea"}}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bea"}, "driverConnectionId": 1, "serverConnectionId": 7906, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "durationMS": 1.1467499425634742, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67764754e3739c3682e74a06\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-01-14T01:27:58.337Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 7906, \"maxWireVersion\": 17, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
DEBUG:pymongo.serverSelection:{"message": "Waiting for suitable server to become available", "selector": "<function writable_server_selector at 0x10677f420>", "operation": "dropDatabase", "topologyDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bea, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "6785bd9e59dc2deea0c22bea"}, "remainingTimeMS": 29}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bea"}, "message": "Connection pool ready", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bea"}, "previousDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bea, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bea, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0011467499425634742>]>", "message": "Topology description changed"}
DEBUG:pymongo.serverSelection:{"message": "Server selection succeeded", "selector": "<function writable_server_selector at 0x10677f420>", "operation": "dropDatabase", "topologyDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bea, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0011467499425634742>]>", "clientId": {"$oid": "6785bd9e59dc2deea0c22bea"}, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bea"}, "message": "Connection checkout started", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bea"}, "driverConnectionId": 1, "serverConnectionId": 7906, "serverHost": "localhost", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bea"}, "message": "Connection created", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bea"}, "message": "Connection ready", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0002059590769931674}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bea"}, "message": "Connection checked out", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0012715839548036456}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bea"}, "message": "Command started", "command": "{\"dropDatabase\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"w1QcjtJTSF6T16Owsf0xcA==\", \"subType\": \"04\"}}}, \"$db\": \"test_note_gen\"}", "commandName": "dropDatabase", "databaseName": "test_note_gen", "requestId": 1131570933, "operationId": 1131570933, "driverConnectionId": 1, "serverConnectionId": 7908, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bea"}, "message": "Command succeeded", "durationMS": 0.315, "reply": "{\"ok\": 1.0}", "commandName": "dropDatabase", "databaseName": "test_note_gen", "requestId": 1131570933, "operationId": 1131570933, "driverConnectionId": 1, "serverConnectionId": 7908, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bea"}, "message": "Connection checked in", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.serverSelection:{"message": "Server selection started", "selector": "PrimaryPreferred(tag_sets=None, max_staleness=-1, hedge=None)", "operation": "endSessions", "topologyDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bea, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0011467499425634742>]>", "clientId": {"$oid": "6785bd9e59dc2deea0c22bea"}}
DEBUG:pymongo.serverSelection:{"message": "Server selection succeeded", "selector": "PrimaryPreferred(tag_sets=None, max_staleness=-1, hedge=None)", "operation": "endSessions", "topologyDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bea, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0011467499425634742>]>", "clientId": {"$oid": "6785bd9e59dc2deea0c22bea"}, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bea"}, "message": "Connection checkout started", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bea"}, "message": "Connection checked out", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 8.249992970377207e-05}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bea"}, "message": "Command started", "command": "{\"endSessions\": [{\"id\": {\"$binary\": {\"base64\": \"w1QcjtJTSF6T16Owsf0xcA==\", \"subType\": \"04\"}}}], \"$db\": \"admin\"}", "commandName": "endSessions", "databaseName": "admin", "requestId": 197493099, "operationId": 197493099, "driverConnectionId": 1, "serverConnectionId": 7908, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bea"}, "message": "Command succeeded", "durationMS": 0.253, "reply": "{\"ok\": 1.0}", "commandName": "endSessions", "databaseName": "admin", "requestId": 197493099, "operationId": 197493099, "driverConnectionId": 1, "serverConnectionId": 7908, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bea"}, "message": "Connection checked in", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bea"}, "serverHost": "localhost", "serverPort": 27017, "message": "Stopped server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bea"}, "message": "Connection closed", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "reason": "Connection pool was closed", "error": "poolClosed"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bea"}, "message": "Connection pool closed", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bea"}, "previousDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bea, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0011467499425634742>]>", "newDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bea, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bea"}, "message": "Stopped topology monitoring"}
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22beb"}, "message": "Starting topology monitoring"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22beb"}, "previousDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22beb, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22beb, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22beb"}, "serverHost": "localhost", "serverPort": 27017, "message": "Starting server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22beb"}, "message": "Connection pool created", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22beb"}, "serverHost": "localhost", "serverPort": 27017, "message": "Stopped server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22beb"}, "message": "Connection pool closed", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22beb"}, "previousDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22beb, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22beb, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22beb"}, "driverConnectionId": 1, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22beb"}, "message": "Stopped topology monitoring"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22beb"}, "driverConnectionId": 1, "serverConnectionId": 7909, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "durationMS": 0.6562079070135951, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67764754e3739c3682e74a06\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-01-14T01:27:58.351Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 7909, \"maxWireVersion\": 17, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
INFO:httpx:HTTP Request: POST http://testserver/note-patterns "HTTP/1.1 422 Unprocessable Entity"
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bed"}, "message": "Starting topology monitoring"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bed"}, "previousDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bed, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bed, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bed"}, "serverHost": "localhost", "serverPort": 27017, "message": "Starting server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bed"}, "message": "Connection pool created", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.serverSelection:{"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bed, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "6785bd9e59dc2deea0c22bed"}}
DEBUG:pymongo.serverSelection:{"message": "Waiting for suitable server to become available", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bed, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "6785bd9e59dc2deea0c22bed"}, "remainingTimeMS": 29}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bed"}, "driverConnectionId": 1, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bed"}, "driverConnectionId": 1, "serverConnectionId": 7911, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "durationMS": 0.2713340800255537, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67764754e3739c3682e74a06\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-01-14T01:27:58.356Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 7911, \"maxWireVersion\": 17, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bed"}, "message": "Connection pool ready", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bed"}, "previousDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bed, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bed, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0002713340800255537>]>", "message": "Topology description changed"}
DEBUG:pymongo.serverSelection:{"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bed, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0002713340800255537>]>", "clientId": {"$oid": "6785bd9e59dc2deea0c22bed"}, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bed"}, "message": "Connection checkout started", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bed"}, "message": "Connection created", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bed"}, "driverConnectionId": 1, "serverConnectionId": 7911, "serverHost": "localhost", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bed"}, "message": "Connection ready", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0003042500466108322}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bed"}, "message": "Connection checked out", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0010960409417748451}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bed"}, "message": "Command started", "command": "{\"find\": \"note_patterns\", \"filter\": {\"name\": \"Test Pattern\"}, \"limit\": 1, \"singleBatch\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"IhhE506pTcycctqUSa2n+w==\", \"subType\": \"04\"}}}, \"$db\": \"note_gen\"}", "commandName": "find", "databaseName": "note_gen", "requestId": 563613512, "operationId": 563613512, "driverConnectionId": 1, "serverConnectionId": 7913, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bed"}, "message": "Command succeeded", "durationMS": 0.687, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": {\"$oid\": \"6785bd4ca69674d4ffb3593e\"}, \"name\": \"Test Pattern\", \"notes\": [{\"note_name\": \"C\", \"octave\": 4, \"duration\": 1.0}], \"pattern_type\": \"melodic\", \"description\": \"Test pattern\", \"tags\": [\"test\"], \"complexity\": 1.0}], \"ns\": \"note_gen.note_patterns\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "note_gen", "requestId": 563613512, "operationId": 563613512, "driverConnectionId": 1, "serverConnectionId": 7913, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bed"}, "message": "Connection checked in", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.serverSelection:{"message": "Server selection started", "selector": "PrimaryPreferred(tag_sets=None, max_staleness=-1, hedge=None)", "operation": "endSessions", "topologyDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bed, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0002713340800255537>]>", "clientId": {"$oid": "6785bd9e59dc2deea0c22bed"}}
DEBUG:pymongo.serverSelection:{"message": "Server selection succeeded", "selector": "PrimaryPreferred(tag_sets=None, max_staleness=-1, hedge=None)", "operation": "endSessions", "topologyDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bed, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0002713340800255537>]>", "clientId": {"$oid": "6785bd9e59dc2deea0c22bed"}, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bed"}, "message": "Connection checkout started", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bed"}, "message": "Connection checked out", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 9.829190094023943e-05}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bed"}, "message": "Command started", "command": "{\"endSessions\": [{\"id\": {\"$binary\": {\"base64\": \"IhhE506pTcycctqUSa2n+w==\", \"subType\": \"04\"}}}], \"$db\": \"admin\"}", "commandName": "endSessions", "databaseName": "admin", "requestId": 101929267, "operationId": 101929267, "driverConnectionId": 1, "serverConnectionId": 7913, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bed"}, "message": "Command succeeded", "durationMS": 0.34099999999999997, "reply": "{\"ok\": 1.0}", "commandName": "endSessions", "databaseName": "admin", "requestId": 101929267, "operationId": 101929267, "driverConnectionId": 1, "serverConnectionId": 7913, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bed"}, "message": "Connection checked in", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bed"}, "serverHost": "localhost", "serverPort": 27017, "message": "Stopped server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bed"}, "message": "Connection closed", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "reason": "Connection pool was closed", "error": "poolClosed"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bed"}, "message": "Connection pool closed", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bed"}, "previousDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bed, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0002713340800255537>]>", "newDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bed, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bed"}, "message": "Stopped topology monitoring"}
INFO:httpx:HTTP Request: POST http://testserver/note-patterns "HTTP/1.1 409 Conflict"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bee"}, "message": "Starting topology monitoring"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bee"}, "previousDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bee, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bee, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bee"}, "serverHost": "localhost", "serverPort": 27017, "message": "Starting server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bee"}, "message": "Connection pool created", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bee"}, "serverHost": "localhost", "serverPort": 27017, "message": "Stopped server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bee"}, "message": "Connection pool closed", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bee"}, "driverConnectionId": 1, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bee"}, "previousDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bee, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bee, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bee"}, "message": "Stopped topology monitoring"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bee"}, "driverConnectionId": 1, "serverConnectionId": 7914, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "durationMS": 0.5272079724818468, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67764754e3739c3682e74a06\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-01-14T01:27:58.392Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 7914, \"maxWireVersion\": 17, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
INFO:httpx:HTTP Request: POST http://testserver/note-patterns "HTTP/1.1 422 Unprocessable Entity"
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bf0"}, "message": "Starting topology monitoring"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bf0"}, "previousDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bf0, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bf0, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bf0"}, "serverHost": "localhost", "serverPort": 27017, "message": "Starting server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bf0"}, "message": "Connection pool created", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bf0"}, "serverHost": "localhost", "serverPort": 27017, "message": "Stopped server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bf0"}, "message": "Connection pool closed", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bf0"}, "previousDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bf0, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bf0, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bf0"}, "message": "Stopped topology monitoring"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bf0"}, "driverConnectionId": 1, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bf0"}, "driverConnectionId": 1, "serverConnectionId": 7916, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "durationMS": 0.32466696575284004, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67764754e3739c3682e74a06\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-01-14T01:27:58.399Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 7916, \"maxWireVersion\": 17, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
INFO:httpx:HTTP Request: POST http://testserver/note-patterns "HTTP/1.1 422 Unprocessable Entity"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:src.note_gen.routers.user_routes:Processing request: progression_name='I-IV-V' note_pattern_name='Simple Triad' rhythm_pattern_name='quarter_notes' scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), scale_type='major')
DEBUG:src.note_gen.routers.user_routes:Checking progression: I-IV-V
DEBUG:src.note_gen.routers.user_routes:Checking note pattern: Simple Triad
DEBUG:src.note_gen.routers.user_routes:Checking rhythm pattern: quarter_notes
DEBUG:src.note_gen.routers.user_routes:Root note: 60
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 60
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 62
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 64
DEBUG:src.note_gen.routers.user_routes:Response notes: [GeneratedNote(note_name='C', octave=4, duration=1.0, position=0.0, velocity=100), GeneratedNote(note_name='D', octave=4, duration=1.0, position=1.0, velocity=100), GeneratedNote(note_name='E', octave=4, duration=1.0, position=2.0, velocity=100)]
INFO:httpx:HTTP Request: POST http://testserver/generate-sequence "HTTP/1.1 200 OK"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bf2"}, "message": "Starting topology monitoring"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bf2"}, "previousDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bf2, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bf2, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bf2"}, "serverHost": "localhost", "serverPort": 27017, "message": "Starting server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bf2"}, "message": "Connection pool created", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.serverSelection:{"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bf2, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "6785bd9e59dc2deea0c22bf2"}}
DEBUG:pymongo.serverSelection:{"message": "Waiting for suitable server to become available", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bf2, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "6785bd9e59dc2deea0c22bf2"}, "remainingTimeMS": 29}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bf2"}, "driverConnectionId": 1, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bf2"}, "driverConnectionId": 1, "serverConnectionId": 7918, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "durationMS": 0.47641689889132977, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67764754e3739c3682e74a06\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-01-14T01:27:58.409Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 7918, \"maxWireVersion\": 17, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bf2"}, "message": "Connection pool ready", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bf2"}, "previousDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bf2, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bf2, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.00047641689889132977>]>", "message": "Topology description changed"}
DEBUG:pymongo.serverSelection:{"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bf2, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.00047641689889132977>]>", "clientId": {"$oid": "6785bd9e59dc2deea0c22bf2"}, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bf2"}, "message": "Connection checkout started", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bf2"}, "driverConnectionId": 1, "serverConnectionId": 7918, "serverHost": "localhost", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bf2"}, "message": "Connection created", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bf2"}, "message": "Connection ready", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.00033650000113993883}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bf2"}, "message": "Connection checked out", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0015311249298974872}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bf2"}, "message": "Command started", "command": "{\"find\": \"rhythm_patterns\", \"filter\": {\"name\": \"Quarter Notes\"}, \"limit\": 1, \"singleBatch\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"twkj/IR5SRe+bME9Bi38Ag==\", \"subType\": \"04\"}}}, \"$db\": \"note_gen\"}", "commandName": "find", "databaseName": "note_gen", "requestId": 530511967, "operationId": 530511967, "driverConnectionId": 1, "serverConnectionId": 7920, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bf2"}, "message": "Command succeeded", "durationMS": 0.64, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": {\"$oid\": \"6785bd4ca69674d4ffb35942\"}, \"name\": \"Quarter Notes\", \"description\": \"Basic quarter note pattern\", \"tags\": [\"basic\"], \"complexity\": 1.0, \"style\": \"test\", \"data\": {\"notes\": [{\"duration\": 1.0, \"velocity\": 100}], \"time_signature\": \"4/4\", \"swing_ratio\": 0.67, \"default_duration\": 1.0, \"total_duration\": 1.0, \"groove_type\": \"straight\", \"duration\": 1.0, \"style\": \"test\"}}], \"ns\": \"note_gen.rhythm_patterns\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "note_gen", "requestId": 530511967, "operationId": 530511967, "driverConnectionId": 1, "serverConnectionId": 7920, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bf2"}, "message": "Connection checked in", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.serverSelection:{"message": "Server selection started", "selector": "PrimaryPreferred(tag_sets=None, max_staleness=-1, hedge=None)", "operation": "endSessions", "topologyDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bf2, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.00047641689889132977>]>", "clientId": {"$oid": "6785bd9e59dc2deea0c22bf2"}}
DEBUG:pymongo.serverSelection:{"message": "Server selection succeeded", "selector": "PrimaryPreferred(tag_sets=None, max_staleness=-1, hedge=None)", "operation": "endSessions", "topologyDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bf2, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.00047641689889132977>]>", "clientId": {"$oid": "6785bd9e59dc2deea0c22bf2"}, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bf2"}, "message": "Connection checkout started", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bf2"}, "message": "Connection checked out", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 9.700004011392593e-05}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bf2"}, "message": "Command started", "command": "{\"endSessions\": [{\"id\": {\"$binary\": {\"base64\": \"twkj/IR5SRe+bME9Bi38Ag==\", \"subType\": \"04\"}}}], \"$db\": \"admin\"}", "commandName": "endSessions", "databaseName": "admin", "requestId": 2110010672, "operationId": 2110010672, "driverConnectionId": 1, "serverConnectionId": 7920, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bf2"}, "message": "Command succeeded", "durationMS": 0.32, "reply": "{\"ok\": 1.0}", "commandName": "endSessions", "databaseName": "admin", "requestId": 2110010672, "operationId": 2110010672, "driverConnectionId": 1, "serverConnectionId": 7920, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bf2"}, "message": "Connection checked in", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bf2"}, "serverHost": "localhost", "serverPort": 27017, "message": "Stopped server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bf2"}, "message": "Connection closed", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "reason": "Connection pool was closed", "error": "poolClosed"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bf2"}, "message": "Connection pool closed", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bf2"}, "previousDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bf2, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.00047641689889132977>]>", "newDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bf2, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bf2"}, "message": "Stopped topology monitoring"}
INFO:httpx:HTTP Request: POST http://testserver/rhythm-patterns "HTTP/1.1 409 Conflict"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bf3"}, "message": "Starting topology monitoring"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bf3"}, "previousDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bf3, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bf3, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bf3"}, "serverHost": "localhost", "serverPort": 27017, "message": "Starting server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bf3"}, "message": "Connection pool created", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bf3"}, "serverHost": "localhost", "serverPort": 27017, "message": "Stopped server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bd9e59dc2deea0c22bf3"}, "message": "Connection pool closed", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bf3"}, "previousDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bf3, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 6785bd9e59dc2deea0c22bf3, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bf3"}, "message": "Stopped topology monitoring"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22bf3"}, "driverConnectionId": 1, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
INFO:httpx:HTTP Request: GET http://testserver/rhythm-patterns/invalid_id "HTTP/1.1 422 Unprocessable Entity"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
INFO:httpx:HTTP Request: GET http://testserver/rhythm-patterns "HTTP/1.1 200 OK"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
INFO:httpx:HTTP Request: GET http://testserver/rhythm-patterns/6785bd9e59dc2deea0c22bf8 "HTTP/1.1 200 OK"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
INFO:httpx:HTTP Request: GET http://testserver/chord-progressions "HTTP/1.1 200 OK"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
INFO:httpx:HTTP Request: GET http://testserver/chord-progressions/6785bd9e59dc2deea0c22bf4 "HTTP/1.1 200 OK"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
INFO:httpx:HTTP Request: GET http://testserver/note-patterns "HTTP/1.1 200 OK"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
INFO:httpx:HTTP Request: GET http://testserver/note-patterns/6785bd9e59dc2deea0c22bf6 "HTTP/1.1 200 OK"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
INFO:httpx:HTTP Request: POST http://testserver/note-patterns "HTTP/1.1 409 Conflict"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
INFO:httpx:HTTP Request: POST http://testserver/rhythm-patterns "HTTP/1.1 409 Conflict"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bd9e59dc2deea0c22be5"}, "serverHost": "localhost", "serverPort": 27017, "awaited": true, "durationMS": 501.3197079533711, "failure": "\"_OperationCancelled('operation cancelled')\"", "message": "Server heartbeat failed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd5d"}, "message": "Starting topology monitoring"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd5d"}, "previousDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd5d, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd5d, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd5d"}, "serverHost": "localhost", "serverPort": 27017, "message": "Starting server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd5d"}, "message": "Connection pool created", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd5d"}, "driverConnectionId": 1, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd5d"}, "driverConnectionId": 1, "serverConnectionId": 7960, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "durationMS": 2.121874946169555, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67764754e3739c3682e74a06\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-01-14T01:32:20.735Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 7960, \"maxWireVersion\": 17, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd5d"}, "message": "Connection pool ready", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd5d"}, "previousDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd5d, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd5d, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.002121874946169555>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd5d"}, "driverConnectionId": 1, "serverConnectionId": 7960, "serverHost": "localhost", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
INFO:httpx:HTTP Request: GET http://testserver/chord-progressions "HTTP/1.1 200 OK"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
INFO:httpx:HTTP Request: GET http://testserver/note-patterns "HTTP/1.1 200 OK"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
INFO:httpx:HTTP Request: GET http://testserver/rhythm-patterns "HTTP/1.1 200 OK"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
INFO:httpx:HTTP Request: POST http://testserver/generate-chord-progression "HTTP/1.1 200 OK"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
INFO:httpx:HTTP Request: GET http://testserver/invalid-endpoint "HTTP/1.1 404 Not Found"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd5f"}, "message": "Starting topology monitoring"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd5f"}, "previousDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd5f, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd5f, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd5f"}, "serverHost": "localhost", "serverPort": 27017, "message": "Starting server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd5f"}, "message": "Connection pool created", "serverHost": "localhost", "serverPort": 27017}
DEBUG:src.note_gen.routers.user_routes:Processing request: progression_name='I-IV-V-I' note_pattern_name='Simple Triad' rhythm_pattern_name='quarter_notes' scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), scale_type='major')
DEBUG:src.note_gen.routers.user_routes:Checking progression: I-IV-V-I
DEBUG:src.note_gen.routers.user_routes:Checking note pattern: Simple Triad
DEBUG:src.note_gen.routers.user_routes:Checking rhythm pattern: quarter_notes
DEBUG:src.note_gen.routers.user_routes:Root note: 60
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.models.scale:Getting intervals for scale type: MAJOR
DEBUG:src.note_gen.routers.user_routes:Chord root: 60
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 60
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 62
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 64
DEBUG:src.note_gen.routers.user_routes:Chord root: 65
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 65
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 67
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 69
DEBUG:src.note_gen.routers.user_routes:Chord root: 67
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 67
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 69
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 71
DEBUG:src.note_gen.routers.user_routes:Chord root: 60
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 60
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 62
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 64
DEBUG:src.note_gen.routers.user_routes:Response notes: [GeneratedNote(note_name='C', octave=4, duration=1.0, position=0.0, velocity=100), GeneratedNote(note_name='D', octave=4, duration=1.0, position=1.0, velocity=100), GeneratedNote(note_name='E', octave=4, duration=1.0, position=2.0, velocity=100), GeneratedNote(note_name='F', octave=4, duration=1.0, position=3.0, velocity=100), GeneratedNote(note_name='G', octave=4, duration=1.0, position=4.0, velocity=100), GeneratedNote(note_name='A', octave=4, duration=1.0, position=5.0, velocity=100), GeneratedNote(note_name='G', octave=4, duration=1.0, position=6.0, velocity=100), GeneratedNote(note_name='A', octave=4, duration=1.0, position=7.0, velocity=100), GeneratedNote(note_name='B', octave=4, duration=1.0, position=8.0, velocity=100), GeneratedNote(note_name='C', octave=4, duration=1.0, position=9.0, velocity=100), GeneratedNote(note_name='D', octave=4, duration=1.0, position=10.0, velocity=100), GeneratedNote(note_name='E', octave=4, duration=1.0, position=11.0, velocity=100)]
INFO:httpx:HTTP Request: POST http://testserver/generate-sequence "HTTP/1.1 200 OK"
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd5f"}, "driverConnectionId": 1, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
DEBUG:pymongo.serverSelection:{"message": "Server selection started", "selector": "<function writable_server_selector at 0x10a37f420>", "operation": "dropDatabase", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd5f, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd5f"}}
DEBUG:pymongo.serverSelection:{"message": "Waiting for suitable server to become available", "selector": "<function writable_server_selector at 0x10a37f420>", "operation": "dropDatabase", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd5f, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd5f"}, "remainingTimeMS": 29}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd5f"}, "driverConnectionId": 1, "serverConnectionId": 7962, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "durationMS": 0.8088339818641543, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67764754e3739c3682e74a06\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-01-14T01:32:20.783Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 7962, \"maxWireVersion\": 17, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd5f"}, "message": "Connection pool ready", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd5f"}, "previousDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd5f, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd5f, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0008088339818641543>]>", "message": "Topology description changed"}
DEBUG:pymongo.serverSelection:{"message": "Server selection succeeded", "selector": "<function writable_server_selector at 0x10a37f420>", "operation": "dropDatabase", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd5f, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0008088339818641543>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd5f"}, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd5f"}, "message": "Connection checkout started", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd5f"}, "message": "Connection created", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd5f"}, "driverConnectionId": 1, "serverConnectionId": 7962, "serverHost": "localhost", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd5f"}, "message": "Connection ready", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0007554999319836497}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd5f"}, "message": "Connection checked out", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0016804999904707074}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd5f"}, "message": "Command started", "command": "{\"dropDatabase\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"sKGZ3kJJRFCnqfzXGMxtVQ==\", \"subType\": \"04\"}}}, \"$db\": \"test_note_gen\"}", "commandName": "dropDatabase", "databaseName": "test_note_gen", "requestId": 1457850878, "operationId": 1457850878, "driverConnectionId": 1, "serverConnectionId": 7964, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd5f"}, "message": "Command succeeded", "durationMS": 0.46599999999999997, "reply": "{\"ok\": 1.0}", "commandName": "dropDatabase", "databaseName": "test_note_gen", "requestId": 1457850878, "operationId": 1457850878, "driverConnectionId": 1, "serverConnectionId": 7964, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd5f"}, "message": "Connection checked in", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.serverSelection:{"message": "Server selection started", "selector": "PrimaryPreferred(tag_sets=None, max_staleness=-1, hedge=None)", "operation": "endSessions", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd5f, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0008088339818641543>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd5f"}}
DEBUG:pymongo.serverSelection:{"message": "Server selection succeeded", "selector": "PrimaryPreferred(tag_sets=None, max_staleness=-1, hedge=None)", "operation": "endSessions", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd5f, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0008088339818641543>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd5f"}, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd5f"}, "message": "Connection checkout started", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd5f"}, "message": "Connection checked out", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 8.891697507351637e-05}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd5f"}, "message": "Command started", "command": "{\"endSessions\": [{\"id\": {\"$binary\": {\"base64\": \"sKGZ3kJJRFCnqfzXGMxtVQ==\", \"subType\": \"04\"}}}], \"$db\": \"admin\"}", "commandName": "endSessions", "databaseName": "admin", "requestId": 1458777923, "operationId": 1458777923, "driverConnectionId": 1, "serverConnectionId": 7964, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd5f"}, "message": "Command succeeded", "durationMS": 0.354, "reply": "{\"ok\": 1.0}", "commandName": "endSessions", "databaseName": "admin", "requestId": 1458777923, "operationId": 1458777923, "driverConnectionId": 1, "serverConnectionId": 7964, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd5f"}, "message": "Connection checked in", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd5f"}, "serverHost": "localhost", "serverPort": 27017, "message": "Stopped server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd5f"}, "message": "Connection closed", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "reason": "Connection pool was closed", "error": "poolClosed"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd5f"}, "message": "Connection pool closed", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd5f"}, "previousDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd5f, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0008088339818641543>]>", "newDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd5f, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd5f"}, "message": "Stopped topology monitoring"}
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd60"}, "message": "Starting topology monitoring"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd60"}, "previousDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd60, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd60, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd60"}, "serverHost": "localhost", "serverPort": 27017, "message": "Starting server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd60"}, "message": "Connection pool created", "serverHost": "localhost", "serverPort": 27017}
DEBUG:src.note_gen.routers.user_routes:Processing request: progression_name='INVALID' note_pattern_name='Simple Triad' rhythm_pattern_name='quarter_notes' scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), scale_type='major')
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd60"}, "driverConnectionId": 1, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
DEBUG:src.note_gen.routers.user_routes:Checking progression: INVALID
ERROR:src.note_gen.routers.user_routes:Invalid progression name: INVALID
ERROR:src.note_gen.routers.user_routes:Error generating sequence: 422: Invalid progression name: INVALID
Traceback (most recent call last):
  File "/Users/bretbouchard/apps/Note-Gen/backend/src/note_gen/routers/user_routes.py", line 319, in generate_sequence
    raise HTTPException(status_code=422, detail=f"Invalid progression name: {request.progression_name}")
fastapi.exceptions.HTTPException: 422: Invalid progression name: INVALID
ERROR:src.note_gen.routers.user_routes:Request data: progression_name='INVALID' note_pattern_name='Simple Triad' rhythm_pattern_name='quarter_notes' scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), scale_type='major')
INFO:httpx:HTTP Request: POST http://testserver/generate-sequence "HTTP/1.1 422 Unprocessable Entity"
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd60"}, "driverConnectionId": 1, "serverConnectionId": 7965, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "durationMS": 1.0260840645059943, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67764754e3739c3682e74a06\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-01-14T01:32:20.801Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 7965, \"maxWireVersion\": 17, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd60"}, "message": "Connection pool ready", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd60"}, "previousDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd60, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd60, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0010260840645059943>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd60"}, "driverConnectionId": 1, "serverConnectionId": 7965, "serverHost": "localhost", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
DEBUG:pymongo.serverSelection:{"message": "Server selection started", "selector": "<function writable_server_selector at 0x10a37f420>", "operation": "dropDatabase", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd60, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0010260840645059943>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd60"}}
DEBUG:pymongo.serverSelection:{"message": "Server selection succeeded", "selector": "<function writable_server_selector at 0x10a37f420>", "operation": "dropDatabase", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd60, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0010260840645059943>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd60"}, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd60"}, "message": "Connection checkout started", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd60"}, "message": "Connection created", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd60"}, "message": "Connection ready", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.00048745900858193636}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd60"}, "message": "Connection checked out", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0011997499968856573}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd60"}, "message": "Command started", "command": "{\"dropDatabase\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"ZJTpUNK9RvKIG88WgoNb1Q==\", \"subType\": \"04\"}}}, \"$db\": \"test_note_gen\"}", "commandName": "dropDatabase", "databaseName": "test_note_gen", "requestId": 74243042, "operationId": 74243042, "driverConnectionId": 1, "serverConnectionId": 7967, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd60"}, "message": "Command succeeded", "durationMS": 0.348, "reply": "{\"ok\": 1.0}", "commandName": "dropDatabase", "databaseName": "test_note_gen", "requestId": 74243042, "operationId": 74243042, "driverConnectionId": 1, "serverConnectionId": 7967, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd60"}, "message": "Connection checked in", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.serverSelection:{"message": "Server selection started", "selector": "PrimaryPreferred(tag_sets=None, max_staleness=-1, hedge=None)", "operation": "endSessions", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd60, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0010260840645059943>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd60"}}
DEBUG:pymongo.serverSelection:{"message": "Server selection succeeded", "selector": "PrimaryPreferred(tag_sets=None, max_staleness=-1, hedge=None)", "operation": "endSessions", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd60, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0010260840645059943>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd60"}, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd60"}, "message": "Connection checkout started", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd60"}, "message": "Connection checked out", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 8.529203478246927e-05}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd60"}, "message": "Command started", "command": "{\"endSessions\": [{\"id\": {\"$binary\": {\"base64\": \"ZJTpUNK9RvKIG88WgoNb1Q==\", \"subType\": \"04\"}}}], \"$db\": \"admin\"}", "commandName": "endSessions", "databaseName": "admin", "requestId": 114807987, "operationId": 114807987, "driverConnectionId": 1, "serverConnectionId": 7967, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd60"}, "message": "Command succeeded", "durationMS": 0.254, "reply": "{\"ok\": 1.0}", "commandName": "endSessions", "databaseName": "admin", "requestId": 114807987, "operationId": 114807987, "driverConnectionId": 1, "serverConnectionId": 7967, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd60"}, "message": "Connection checked in", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd60"}, "serverHost": "localhost", "serverPort": 27017, "message": "Stopped server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd60"}, "message": "Connection closed", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "reason": "Connection pool was closed", "error": "poolClosed"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd60"}, "message": "Connection pool closed", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd60"}, "previousDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd60, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0010260840645059943>]>", "newDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd60, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd60"}, "message": "Stopped topology monitoring"}
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd61"}, "message": "Starting topology monitoring"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd61"}, "previousDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd61, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd61, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd61"}, "serverHost": "localhost", "serverPort": 27017, "message": "Starting server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd61"}, "message": "Connection pool created", "serverHost": "localhost", "serverPort": 27017}
DEBUG:src.note_gen.routers.user_routes:Processing request: progression_name='I-IV-V-I' note_pattern_name='INVALID' rhythm_pattern_name='quarter_notes' scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), scale_type='major')
DEBUG:src.note_gen.routers.user_routes:Checking progression: I-IV-V-I
DEBUG:src.note_gen.routers.user_routes:Checking note pattern: INVALID
ERROR:src.note_gen.routers.user_routes:Invalid note pattern name: INVALID
ERROR:src.note_gen.routers.user_routes:Error generating sequence: 422: Invalid note pattern name: INVALID
Traceback (most recent call last):
  File "/Users/bretbouchard/apps/Note-Gen/backend/src/note_gen/routers/user_routes.py", line 325, in generate_sequence
    raise HTTPException(status_code=422, detail=f"Invalid note pattern name: {request.note_pattern_name}")
fastapi.exceptions.HTTPException: 422: Invalid note pattern name: INVALID
ERROR:src.note_gen.routers.user_routes:Request data: progression_name='I-IV-V-I' note_pattern_name='INVALID' rhythm_pattern_name='quarter_notes' scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), scale_type='major')
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd61"}, "driverConnectionId": 1, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
INFO:httpx:HTTP Request: POST http://testserver/generate-sequence "HTTP/1.1 422 Unprocessable Entity"
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd61"}, "driverConnectionId": 1, "serverConnectionId": 7968, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "durationMS": 0.37875003181397915, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67764754e3739c3682e74a06\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-01-14T01:32:20.822Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 7968, \"maxWireVersion\": 17, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd61"}, "message": "Connection pool ready", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd61"}, "previousDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd61, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd61, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.00037875003181397915>]>", "message": "Topology description changed"}
DEBUG:pymongo.serverSelection:{"message": "Server selection started", "selector": "<function writable_server_selector at 0x10a37f420>", "operation": "dropDatabase", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd61, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.00037875003181397915>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd61"}}
DEBUG:pymongo.serverSelection:{"message": "Server selection succeeded", "selector": "<function writable_server_selector at 0x10a37f420>", "operation": "dropDatabase", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd61, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.00037875003181397915>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd61"}, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd61"}, "message": "Connection checkout started", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd61"}, "message": "Connection created", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd61"}, "driverConnectionId": 1, "serverConnectionId": 7968, "serverHost": "localhost", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd61"}, "message": "Connection ready", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0004767499631270766}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd61"}, "message": "Connection checked out", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.001216416945680976}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd61"}, "message": "Command started", "command": "{\"dropDatabase\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"BQxIqClJSKKZxcDulAEDAw==\", \"subType\": \"04\"}}}, \"$db\": \"test_note_gen\"}", "commandName": "dropDatabase", "databaseName": "test_note_gen", "requestId": 143542612, "operationId": 143542612, "driverConnectionId": 1, "serverConnectionId": 7969, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd61"}, "message": "Command succeeded", "durationMS": 0.32, "reply": "{\"ok\": 1.0}", "commandName": "dropDatabase", "databaseName": "test_note_gen", "requestId": 143542612, "operationId": 143542612, "driverConnectionId": 1, "serverConnectionId": 7969, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd61"}, "message": "Connection checked in", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.serverSelection:{"message": "Server selection started", "selector": "PrimaryPreferred(tag_sets=None, max_staleness=-1, hedge=None)", "operation": "endSessions", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd61, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.00037875003181397915>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd61"}}
DEBUG:pymongo.serverSelection:{"message": "Server selection succeeded", "selector": "PrimaryPreferred(tag_sets=None, max_staleness=-1, hedge=None)", "operation": "endSessions", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd61, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.00037875003181397915>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd61"}, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd61"}, "message": "Connection checkout started", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd61"}, "message": "Connection checked out", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.00012995791621506214}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd61"}, "message": "Command started", "command": "{\"endSessions\": [{\"id\": {\"$binary\": {\"base64\": \"BQxIqClJSKKZxcDulAEDAw==\", \"subType\": \"04\"}}}], \"$db\": \"admin\"}", "commandName": "endSessions", "databaseName": "admin", "requestId": 896544303, "operationId": 896544303, "driverConnectionId": 1, "serverConnectionId": 7969, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd61"}, "message": "Command succeeded", "durationMS": 0.292, "reply": "{\"ok\": 1.0}", "commandName": "endSessions", "databaseName": "admin", "requestId": 896544303, "operationId": 896544303, "driverConnectionId": 1, "serverConnectionId": 7969, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd61"}, "message": "Connection checked in", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd61"}, "serverHost": "localhost", "serverPort": 27017, "message": "Stopped server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd61"}, "message": "Connection closed", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "reason": "Connection pool was closed", "error": "poolClosed"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd61"}, "message": "Connection pool closed", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd61"}, "previousDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd61, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.00037875003181397915>]>", "newDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd61, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd61"}, "message": "Stopped topology monitoring"}
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd62"}, "message": "Starting topology monitoring"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd62"}, "previousDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd62, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd62, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd62"}, "serverHost": "localhost", "serverPort": 27017, "message": "Starting server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd62"}, "message": "Connection pool created", "serverHost": "localhost", "serverPort": 27017}
DEBUG:src.note_gen.routers.user_routes:Processing request: progression_name='I-IV-V-I' note_pattern_name='Simple Triad' rhythm_pattern_name='INVALID' scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), scale_type='major')
DEBUG:src.note_gen.routers.user_routes:Checking progression: I-IV-V-I
DEBUG:src.note_gen.routers.user_routes:Checking note pattern: Simple Triad
DEBUG:src.note_gen.routers.user_routes:Checking rhythm pattern: INVALID
ERROR:src.note_gen.routers.user_routes:Invalid rhythm pattern name: INVALID
ERROR:src.note_gen.routers.user_routes:Error generating sequence: 422: Invalid rhythm pattern name: INVALID
Traceback (most recent call last):
  File "/Users/bretbouchard/apps/Note-Gen/backend/src/note_gen/routers/user_routes.py", line 331, in generate_sequence
    raise HTTPException(status_code=422, detail=f"Invalid rhythm pattern name: {request.rhythm_pattern_name}")
fastapi.exceptions.HTTPException: 422: Invalid rhythm pattern name: INVALID
ERROR:src.note_gen.routers.user_routes:Request data: progression_name='I-IV-V-I' note_pattern_name='Simple Triad' rhythm_pattern_name='INVALID' scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), scale_type='major')
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd62"}, "driverConnectionId": 1, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
INFO:httpx:HTTP Request: POST http://testserver/generate-sequence "HTTP/1.1 422 Unprocessable Entity"
DEBUG:pymongo.serverSelection:{"message": "Server selection started", "selector": "<function writable_server_selector at 0x10a37f420>", "operation": "dropDatabase", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd62, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd62"}}
DEBUG:pymongo.serverSelection:{"message": "Waiting for suitable server to become available", "selector": "<function writable_server_selector at 0x10a37f420>", "operation": "dropDatabase", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd62, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd62"}, "remainingTimeMS": 29}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd62"}, "driverConnectionId": 1, "serverConnectionId": 7971, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "durationMS": 0.8963750442489982, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67764754e3739c3682e74a06\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-01-14T01:32:20.840Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 7971, \"maxWireVersion\": 17, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd62"}, "message": "Connection pool ready", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd62"}, "previousDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd62, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd62, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0008963750442489982>]>", "message": "Topology description changed"}
DEBUG:pymongo.serverSelection:{"message": "Server selection succeeded", "selector": "<function writable_server_selector at 0x10a37f420>", "operation": "dropDatabase", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd62, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0008963750442489982>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd62"}, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd62"}, "message": "Connection checkout started", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd62"}, "message": "Connection created", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd62"}, "driverConnectionId": 1, "serverConnectionId": 7971, "serverHost": "localhost", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd62"}, "message": "Connection ready", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0007012500427663326}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd62"}, "message": "Connection checked out", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0017393329180777073}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd62"}, "message": "Command started", "command": "{\"dropDatabase\": 1, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"87qkHr5TTKWirFs5ywlizQ==\", \"subType\": \"04\"}}}, \"$db\": \"test_note_gen\"}", "commandName": "dropDatabase", "databaseName": "test_note_gen", "requestId": 1131570933, "operationId": 1131570933, "driverConnectionId": 1, "serverConnectionId": 7972, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd62"}, "message": "Command succeeded", "durationMS": 0.352, "reply": "{\"ok\": 1.0}", "commandName": "dropDatabase", "databaseName": "test_note_gen", "requestId": 1131570933, "operationId": 1131570933, "driverConnectionId": 1, "serverConnectionId": 7972, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd62"}, "message": "Connection checked in", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.serverSelection:{"message": "Server selection started", "selector": "PrimaryPreferred(tag_sets=None, max_staleness=-1, hedge=None)", "operation": "endSessions", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd62, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0008963750442489982>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd62"}}
DEBUG:pymongo.serverSelection:{"message": "Server selection succeeded", "selector": "PrimaryPreferred(tag_sets=None, max_staleness=-1, hedge=None)", "operation": "endSessions", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd62, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0008963750442489982>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd62"}, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd62"}, "message": "Connection checkout started", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd62"}, "message": "Connection checked out", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 8.91250092536211e-05}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd62"}, "message": "Command started", "command": "{\"endSessions\": [{\"id\": {\"$binary\": {\"base64\": \"87qkHr5TTKWirFs5ywlizQ==\", \"subType\": \"04\"}}}], \"$db\": \"admin\"}", "commandName": "endSessions", "databaseName": "admin", "requestId": 197493099, "operationId": 197493099, "driverConnectionId": 1, "serverConnectionId": 7972, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd62"}, "message": "Command succeeded", "durationMS": 0.268, "reply": "{\"ok\": 1.0}", "commandName": "endSessions", "databaseName": "admin", "requestId": 197493099, "operationId": 197493099, "driverConnectionId": 1, "serverConnectionId": 7972, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd62"}, "message": "Connection checked in", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd62"}, "serverHost": "localhost", "serverPort": 27017, "message": "Stopped server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd62"}, "message": "Connection closed", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "reason": "Connection pool was closed", "error": "poolClosed"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd62"}, "message": "Connection pool closed", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd62"}, "previousDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd62, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0008963750442489982>]>", "newDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd62, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd62"}, "message": "Stopped topology monitoring"}
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd63"}, "message": "Starting topology monitoring"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd63"}, "previousDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd63, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd63, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd63"}, "serverHost": "localhost", "serverPort": 27017, "message": "Starting server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd63"}, "message": "Connection pool created", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd63"}, "serverHost": "localhost", "serverPort": 27017, "message": "Stopped server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd63"}, "message": "Connection pool closed", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd63"}, "previousDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd63, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd63, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd63"}, "message": "Stopped topology monitoring"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd63"}, "driverConnectionId": 1, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd63"}, "driverConnectionId": 1, "serverConnectionId": 7974, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "durationMS": 0.4177909577265382, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67764754e3739c3682e74a06\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-01-14T01:32:20.853Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 7974, \"maxWireVersion\": 17, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
INFO:httpx:HTTP Request: POST http://testserver/note-patterns "HTTP/1.1 422 Unprocessable Entity"
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "message": "Starting topology monitoring"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "previousDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd65, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd65, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "serverHost": "localhost", "serverPort": 27017, "message": "Starting server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "message": "Connection pool created", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.serverSelection:{"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd65, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}}
DEBUG:pymongo.serverSelection:{"message": "Waiting for suitable server to become available", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd65, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "remainingTimeMS": 29}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "driverConnectionId": 1, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "driverConnectionId": 1, "serverConnectionId": 7976, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "durationMS": 0.2288329415023327, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67764754e3739c3682e74a06\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-01-14T01:32:20.857Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 7976, \"maxWireVersion\": 17, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "message": "Connection pool ready", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "previousDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd65, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd65, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0002288329415023327>]>", "message": "Topology description changed"}
DEBUG:pymongo.serverSelection:{"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd65, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0002288329415023327>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "message": "Connection checkout started", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "message": "Connection created", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "driverConnectionId": 1, "serverConnectionId": 7976, "serverHost": "localhost", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "message": "Connection ready", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0002816249616444111}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "message": "Connection checked out", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0011659580050036311}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "message": "Command started", "command": "{\"find\": \"note_patterns\", \"filter\": {\"id\": \"6785bea4dcb335bc68e6dd64\"}, \"limit\": 1, \"singleBatch\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"of6ppLS4Sfquux+nLvubTw==\", \"subType\": \"04\"}}}, \"$db\": \"note_gen\"}", "commandName": "find", "databaseName": "note_gen", "requestId": 563613512, "operationId": 563613512, "driverConnectionId": 1, "serverConnectionId": 7978, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "message": "Command succeeded", "durationMS": 0.6040000000000001, "reply": "{\"cursor\": {\"ns\": \"note_gen.note_patterns\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "note_gen", "requestId": 563613512, "operationId": 563613512, "driverConnectionId": 1, "serverConnectionId": 7978, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "message": "Connection checked in", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.serverSelection:{"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd65, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0002288329415023327>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}}
DEBUG:pymongo.serverSelection:{"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd65, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0002288329415023327>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "message": "Connection checkout started", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "message": "Connection checked out", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.00011608295608311892}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "message": "Command started", "command": "{\"find\": \"note_patterns\", \"filter\": {\"name\": \"Test Pattern\"}, \"limit\": 1, \"singleBatch\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"of6ppLS4Sfquux+nLvubTw==\", \"subType\": \"04\"}}}, \"$db\": \"note_gen\"}", "commandName": "find", "databaseName": "note_gen", "requestId": 101929267, "operationId": 101929267, "driverConnectionId": 1, "serverConnectionId": 7978, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "message": "Command succeeded", "durationMS": 0.482, "reply": "{\"cursor\": {\"ns\": \"note_gen.note_patterns\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "note_gen", "requestId": 101929267, "operationId": 101929267, "driverConnectionId": 1, "serverConnectionId": 7978, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "message": "Connection checked in", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.serverSelection:{"message": "Server selection started", "selector": "<function writable_server_selector at 0x10a37f420>", "operation": "insert", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd65, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0002288329415023327>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}}
DEBUG:pymongo.serverSelection:{"message": "Server selection succeeded", "selector": "<function writable_server_selector at 0x10a37f420>", "operation": "insert", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd65, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0002288329415023327>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "message": "Connection checkout started", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "message": "Connection checked out", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 8.529191836714745e-05}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "message": "Command started", "command": "{\"insert\": \"note_patterns\", \"ordered\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"of6ppLS4Sfquux+nLvubTw==\", \"subType\": \"04\"}}}, \"$db\": \"note_gen\", \"documents\": [{\"name\": \"Test Pattern\", \"notes\": [{\"note_name\": \"C\", \"octave\": 4, \"duration\": 1.0}], \"pattern_type\": \"melodic\", \"description\": \"Test pattern\", \"tags\": [\"test\"], \"complexity\": 1.0, \"_id\": {\"$oid\": \"6785bea4dcb335bc68e6dd64\"}}]}", "commandName": "insert", "databaseName": "note_gen", "requestId": 1580723810, "operationId": 1580723810, "driverConnectionId": 1, "serverConnectionId": 7978, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "message": "Command succeeded", "durationMS": 0.46900000000000003, "reply": "{\"n\": 1, \"ok\": 1.0}", "commandName": "insert", "databaseName": "note_gen", "requestId": 1580723810, "operationId": 1580723810, "driverConnectionId": 1, "serverConnectionId": 7978, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "message": "Connection checked in", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.serverSelection:{"message": "Server selection started", "selector": "PrimaryPreferred(tag_sets=None, max_staleness=-1, hedge=None)", "operation": "endSessions", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd65, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0002288329415023327>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}}
DEBUG:pymongo.serverSelection:{"message": "Server selection succeeded", "selector": "PrimaryPreferred(tag_sets=None, max_staleness=-1, hedge=None)", "operation": "endSessions", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd65, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0002288329415023327>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "message": "Connection checkout started", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "message": "Connection checked out", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 9.470898658037186e-05}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "message": "Command started", "command": "{\"endSessions\": [{\"id\": {\"$binary\": {\"base64\": \"of6ppLS4Sfquux+nLvubTw==\", \"subType\": \"04\"}}}], \"$db\": \"admin\"}", "commandName": "endSessions", "databaseName": "admin", "requestId": 704877633, "operationId": 704877633, "driverConnectionId": 1, "serverConnectionId": 7978, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "message": "Command succeeded", "durationMS": 0.30200000000000005, "reply": "{\"ok\": 1.0}", "commandName": "endSessions", "databaseName": "admin", "requestId": 704877633, "operationId": 704877633, "driverConnectionId": 1, "serverConnectionId": 7978, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "message": "Connection checked in", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "serverHost": "localhost", "serverPort": 27017, "message": "Stopped server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "message": "Connection closed", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "reason": "Connection pool was closed", "error": "poolClosed"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "message": "Connection pool closed", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "previousDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd65, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.0002288329415023327>]>", "newDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd65, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd65"}, "message": "Stopped topology monitoring"}
INFO:httpx:HTTP Request: POST http://testserver/note-patterns "HTTP/1.1 200 OK"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd66"}, "message": "Starting topology monitoring"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd66"}, "previousDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd66, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd66, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd66"}, "serverHost": "localhost", "serverPort": 27017, "message": "Starting server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd66"}, "message": "Connection pool created", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd66"}, "serverHost": "localhost", "serverPort": 27017, "message": "Stopped server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd66"}, "message": "Connection pool closed", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd66"}, "previousDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd66, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd66, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd66"}, "driverConnectionId": 1, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd66"}, "message": "Stopped topology monitoring"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd66"}, "driverConnectionId": 1, "serverConnectionId": 7979, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "durationMS": 0.4694999661296606, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67764754e3739c3682e74a06\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-01-14T01:32:20.870Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 7979, \"maxWireVersion\": 17, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
INFO:httpx:HTTP Request: POST http://testserver/note-patterns "HTTP/1.1 422 Unprocessable Entity"
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd68"}, "message": "Starting topology monitoring"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd68"}, "previousDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd68, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd68, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd68"}, "serverHost": "localhost", "serverPort": 27017, "message": "Starting server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd68"}, "message": "Connection pool created", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.serverSelection:{"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd68, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd68"}}
DEBUG:pymongo.serverSelection:{"message": "Waiting for suitable server to become available", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd68, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd68"}, "remainingTimeMS": 29}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd68"}, "driverConnectionId": 1, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd68"}, "driverConnectionId": 1, "serverConnectionId": 7981, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "durationMS": 0.24154200218617916, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67764754e3739c3682e74a06\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-01-14T01:32:20.874Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 7981, \"maxWireVersion\": 17, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd68"}, "message": "Connection pool ready", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd68"}, "previousDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd68, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd68, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.00024154200218617916>]>", "message": "Topology description changed"}
DEBUG:pymongo.serverSelection:{"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd68, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.00024154200218617916>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd68"}, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd68"}, "message": "Connection checkout started", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd68"}, "message": "Connection created", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd68"}, "driverConnectionId": 1, "serverConnectionId": 7981, "serverHost": "localhost", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd68"}, "message": "Connection ready", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.00031100003980100155}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd68"}, "message": "Connection checked out", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0010939999483525753}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd68"}, "message": "Command started", "command": "{\"find\": \"note_patterns\", \"filter\": {\"id\": \"6785bea4dcb335bc68e6dd67\"}, \"limit\": 1, \"singleBatch\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"wnk7loTfT1+yQX8afCRuxA==\", \"subType\": \"04\"}}}, \"$db\": \"note_gen\"}", "commandName": "find", "databaseName": "note_gen", "requestId": 2110010672, "operationId": 2110010672, "driverConnectionId": 1, "serverConnectionId": 7983, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd68"}, "message": "Command succeeded", "durationMS": 0.514, "reply": "{\"cursor\": {\"ns\": \"note_gen.note_patterns\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "note_gen", "requestId": 2110010672, "operationId": 2110010672, "driverConnectionId": 1, "serverConnectionId": 7983, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd68"}, "message": "Connection checked in", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.serverSelection:{"message": "Server selection started", "selector": "PrimaryPreferred(tag_sets=None, max_staleness=-1, hedge=None)", "operation": "endSessions", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd68, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.00024154200218617916>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd68"}}
DEBUG:pymongo.serverSelection:{"message": "Server selection succeeded", "selector": "PrimaryPreferred(tag_sets=None, max_staleness=-1, hedge=None)", "operation": "endSessions", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd68, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.00024154200218617916>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd68"}, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd68"}, "message": "Connection checkout started", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd68"}, "message": "Connection checked out", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 8.058303501456976e-05}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd68"}, "message": "Command started", "command": "{\"endSessions\": [{\"id\": {\"$binary\": {\"base64\": \"wnk7loTfT1+yQX8afCRuxA==\", \"subType\": \"04\"}}}], \"$db\": \"admin\"}", "commandName": "endSessions", "databaseName": "admin", "requestId": 1551901393, "operationId": 1551901393, "driverConnectionId": 1, "serverConnectionId": 7983, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd68"}, "message": "Command succeeded", "durationMS": 0.372, "reply": "{\"ok\": 1.0}", "commandName": "endSessions", "databaseName": "admin", "requestId": 1551901393, "operationId": 1551901393, "driverConnectionId": 1, "serverConnectionId": 7983, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd68"}, "message": "Connection checked in", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd68"}, "serverHost": "localhost", "serverPort": 27017, "message": "Stopped server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd68"}, "message": "Connection closed", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "reason": "Connection pool was closed", "error": "poolClosed"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd68"}, "message": "Connection pool closed", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd68"}, "previousDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd68, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.00024154200218617916>]>", "newDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd68, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd68"}, "message": "Stopped topology monitoring"}
INFO:httpx:HTTP Request: POST http://testserver/note-patterns "HTTP/1.1 422 Unprocessable Entity"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:src.note_gen.routers.user_routes:Processing request: progression_name='I-IV-V' note_pattern_name='Simple Triad' rhythm_pattern_name='quarter_notes' scale_info=ScaleInfo(root=Note(note_name='C', octave=4, duration=1.0, velocity=64, stored_midi_number=None), scale_type='major')
DEBUG:src.note_gen.routers.user_routes:Checking progression: I-IV-V
DEBUG:src.note_gen.routers.user_routes:Checking note pattern: Simple Triad
DEBUG:src.note_gen.routers.user_routes:Checking rhythm pattern: quarter_notes
DEBUG:src.note_gen.routers.user_routes:Root note: 60
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 60
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 62
DEBUG:src.note_gen.routers.user_routes:Calculated note pitch: 64
DEBUG:src.note_gen.routers.user_routes:Response notes: [GeneratedNote(note_name='C', octave=4, duration=1.0, position=0.0, velocity=100), GeneratedNote(note_name='D', octave=4, duration=1.0, position=1.0, velocity=100), GeneratedNote(note_name='E', octave=4, duration=1.0, position=2.0, velocity=100)]
INFO:httpx:HTTP Request: POST http://testserver/generate-sequence "HTTP/1.1 200 OK"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "message": "Starting topology monitoring"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "previousDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd6a, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd6a, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "serverHost": "localhost", "serverPort": 27017, "message": "Starting server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "message": "Connection pool created", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.serverSelection:{"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd6a, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}}
DEBUG:pymongo.serverSelection:{"message": "Waiting for suitable server to become available", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd6a, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "remainingTimeMS": 29}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "driverConnectionId": 1, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "driverConnectionId": 1, "serverConnectionId": 7984, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "durationMS": 0.40625000838190317, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67764754e3739c3682e74a06\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-01-14T01:32:20.888Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 7984, \"maxWireVersion\": 17, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "message": "Connection pool ready", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "previousDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd6a, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd6a, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.00040625000838190317>]>", "message": "Topology description changed"}
DEBUG:pymongo.serverSelection:{"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd6a, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.00040625000838190317>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "message": "Connection checkout started", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "message": "Connection created", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "driverConnectionId": 1, "serverConnectionId": 7984, "serverHost": "localhost", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "message": "Connection ready", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.00027591700199991465}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "message": "Connection checked out", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0011798749910667539}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "message": "Command started", "command": "{\"find\": \"rhythm_patterns\", \"filter\": {\"id\": \"6785bea4dcb335bc68e6dd69\"}, \"limit\": 1, \"singleBatch\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"lPEsgOIMTieC6LGukBr/MA==\", \"subType\": \"04\"}}}, \"$db\": \"note_gen\"}", "commandName": "find", "databaseName": "note_gen", "requestId": 1899894091, "operationId": 1899894091, "driverConnectionId": 1, "serverConnectionId": 7985, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "message": "Command succeeded", "durationMS": 0.541, "reply": "{\"cursor\": {\"ns\": \"note_gen.rhythm_patterns\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "note_gen", "requestId": 1899894091, "operationId": 1899894091, "driverConnectionId": 1, "serverConnectionId": 7985, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "message": "Connection checked in", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.serverSelection:{"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd6a, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.00040625000838190317>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}}
DEBUG:pymongo.serverSelection:{"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd6a, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.00040625000838190317>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "message": "Connection checkout started", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "message": "Connection checked out", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.005620375042781234}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "message": "Command started", "command": "{\"find\": \"rhythm_patterns\", \"filter\": {\"name\": \"Quarter Notes\"}, \"limit\": 1, \"singleBatch\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"lPEsgOIMTieC6LGukBr/MA==\", \"subType\": \"04\"}}}, \"$db\": \"note_gen\"}", "commandName": "find", "databaseName": "note_gen", "requestId": 585640194, "operationId": 585640194, "driverConnectionId": 1, "serverConnectionId": 7985, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "message": "Command succeeded", "durationMS": 4.489, "reply": "{\"cursor\": {\"ns\": \"note_gen.rhythm_patterns\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "note_gen", "requestId": 585640194, "operationId": 585640194, "driverConnectionId": 1, "serverConnectionId": 7985, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "message": "Connection checked in", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.serverSelection:{"message": "Server selection started", "selector": "<function writable_server_selector at 0x10a37f420>", "operation": "insert", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd6a, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.00040625000838190317>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}}
DEBUG:pymongo.serverSelection:{"message": "Server selection succeeded", "selector": "<function writable_server_selector at 0x10a37f420>", "operation": "insert", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd6a, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.00040625000838190317>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "message": "Connection checkout started", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "message": "Connection checked out", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.00010308297351002693}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "message": "Command started", "command": "{\"insert\": \"rhythm_patterns\", \"ordered\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"lPEsgOIMTieC6LGukBr/MA==\", \"subType\": \"04\"}}}, \"$db\": \"note_gen\", \"documents\": [{\"name\": \"Quarter Notes\", \"description\": \"Basic quarter note pattern\", \"tags\": [\"basic\"], \"complexity\": 1.0, \"style\": \"test\", \"data\": {\"notes\": [{\"duration\": 1.0, \"velocity\": 100}], \"time_signature\": \"4/4\", \"swing_ratio\": 0.67, \"default_duration\": 1.0, \"total_duration\": 1.0, \"groove_type\": \"straight\", \"duration\": 1.0, \"style\": \"test\"}, \"_id\": {\"$oid\": \"6785bea4dcb335bc68e6dd69\"}}]}", "commandName": "insert", "databaseName": "note_gen", "requestId": 937186357, "operationId": 937186357, "driverConnectionId": 1, "serverConnectionId": 7985, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "message": "Command succeeded", "durationMS": 0.7649999999999999, "reply": "{\"n\": 1, \"ok\": 1.0}", "commandName": "insert", "databaseName": "note_gen", "requestId": 937186357, "operationId": 937186357, "driverConnectionId": 1, "serverConnectionId": 7985, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "message": "Connection checked in", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.serverSelection:{"message": "Server selection started", "selector": "PrimaryPreferred(tag_sets=None, max_staleness=-1, hedge=None)", "operation": "endSessions", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd6a, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.00040625000838190317>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}}
DEBUG:pymongo.serverSelection:{"message": "Server selection succeeded", "selector": "PrimaryPreferred(tag_sets=None, max_staleness=-1, hedge=None)", "operation": "endSessions", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd6a, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.00040625000838190317>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "message": "Connection checkout started", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "message": "Connection checked out", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.00011308398097753525}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "message": "Command started", "command": "{\"endSessions\": [{\"id\": {\"$binary\": {\"base64\": \"lPEsgOIMTieC6LGukBr/MA==\", \"subType\": \"04\"}}}], \"$db\": \"admin\"}", "commandName": "endSessions", "databaseName": "admin", "requestId": 1646035001, "operationId": 1646035001, "driverConnectionId": 1, "serverConnectionId": 7985, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "message": "Command succeeded", "durationMS": 0.432, "reply": "{\"ok\": 1.0}", "commandName": "endSessions", "databaseName": "admin", "requestId": 1646035001, "operationId": 1646035001, "driverConnectionId": 1, "serverConnectionId": 7985, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "message": "Connection checked in", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "serverHost": "localhost", "serverPort": 27017, "message": "Stopped server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "message": "Connection closed", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "reason": "Connection pool was closed", "error": "poolClosed"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "message": "Connection pool closed", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "previousDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd6a, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.00040625000838190317>]>", "newDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd6a, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd6a"}, "message": "Stopped topology monitoring"}
INFO:httpx:HTTP Request: POST http://testserver/rhythm-patterns "HTTP/1.1 200 OK"
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd6b"}, "message": "Starting topology monitoring"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd6b"}, "previousDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd6b, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd6b, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd6b"}, "serverHost": "localhost", "serverPort": 27017, "message": "Starting server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6b"}, "message": "Connection pool created", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.serverSelection:{"message": "Server selection started", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd6b, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd6b"}}
DEBUG:pymongo.serverSelection:{"message": "Waiting for suitable server to become available", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd6b, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd6b"}, "remainingTimeMS": 29}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd6b"}, "driverConnectionId": 1, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd6b"}, "driverConnectionId": 1, "serverConnectionId": 7987, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "durationMS": 0.368167064152658, "reply": "{\"helloOk\": true, \"ismaster\": true, \"topologyVersion\": {\"processId\": {\"$oid\": \"67764754e3739c3682e74a06\"}}, \"maxBsonObjectSize\": 16777216, \"maxMessageSizeBytes\": 48000000, \"maxWriteBatchSize\": 100000, \"localTime\": {\"$date\": \"2025-01-14T01:32:20.923Z\"}, \"logicalSessionTimeoutMinutes\": 30, \"connectionId\": 7987, \"maxWireVersion\": 17, \"ok\": 1.0}", "message": "Server heartbeat succeeded"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6b"}, "message": "Connection pool ready", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd6b"}, "previousDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd6b, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd6b, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.000368167064152658>]>", "message": "Topology description changed"}
DEBUG:pymongo.serverSelection:{"message": "Server selection succeeded", "selector": "Primary()", "operation": "find", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd6b, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.000368167064152658>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd6b"}, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6b"}, "message": "Connection checkout started", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd6b"}, "driverConnectionId": 1, "serverConnectionId": 7987, "serverHost": "localhost", "serverPort": 27017, "awaited": true, "message": "Server heartbeat started"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6b"}, "message": "Connection created", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6b"}, "message": "Connection ready", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0002922500716522336}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6b"}, "message": "Connection checked out", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 0.0015266670379787683}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6b"}, "message": "Command started", "command": "{\"find\": \"rhythm_patterns\", \"filter\": {\"_id\": {\"$oid\": \"6785bea4dcb335bc68e6dd69\"}}, \"limit\": 1, \"singleBatch\": true, \"lsid\": {\"id\": {\"$binary\": {\"base64\": \"tquzBmHVTBiiA9iUH6cBqQ==\", \"subType\": \"04\"}}}, \"$db\": \"note_gen\"}", "commandName": "find", "databaseName": "note_gen", "requestId": 357571490, "operationId": 357571490, "driverConnectionId": 1, "serverConnectionId": 7989, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6b"}, "message": "Command succeeded", "durationMS": 0.544, "reply": "{\"cursor\": {\"firstBatch\": [{\"_id\": {\"$oid\": \"6785bea4dcb335bc68e6dd69\"}, \"name\": \"Quarter Notes\", \"description\": \"Basic quarter note pattern\", \"tags\": [\"basic\"], \"complexity\": 1.0, \"style\": \"test\", \"data\": {\"notes\": [{\"duration\": 1.0, \"velocity\": 100}], \"time_signature\": \"4/4\", \"swing_ratio\": 0.67, \"default_duration\": 1.0, \"total_duration\": 1.0, \"groove_type\": \"straight\", \"duration\": 1.0, \"style\": \"test\"}}], \"ns\": \"note_gen.rhythm_patterns\"}, \"ok\": 1.0}", "commandName": "find", "databaseName": "note_gen", "requestId": 357571490, "operationId": 357571490, "driverConnectionId": 1, "serverConnectionId": 7989, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6b"}, "message": "Connection checked in", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.serverSelection:{"message": "Server selection started", "selector": "PrimaryPreferred(tag_sets=None, max_staleness=-1, hedge=None)", "operation": "endSessions", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd6b, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.000368167064152658>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd6b"}}
DEBUG:pymongo.serverSelection:{"message": "Server selection succeeded", "selector": "PrimaryPreferred(tag_sets=None, max_staleness=-1, hedge=None)", "operation": "endSessions", "topologyDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd6b, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.000368167064152658>]>", "clientId": {"$oid": "6785bea4dcb335bc68e6dd6b"}, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6b"}, "message": "Connection checkout started", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6b"}, "message": "Connection checked out", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "durationMS": 8.879194501787424e-05}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6b"}, "message": "Command started", "command": "{\"endSessions\": [{\"id\": {\"$binary\": {\"base64\": \"tquzBmHVTBiiA9iUH6cBqQ==\", \"subType\": \"04\"}}}], \"$db\": \"admin\"}", "commandName": "endSessions", "databaseName": "admin", "requestId": 1044788124, "operationId": 1044788124, "driverConnectionId": 1, "serverConnectionId": 7989, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.command:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6b"}, "message": "Command succeeded", "durationMS": 0.27099999999999996, "reply": "{\"ok\": 1.0}", "commandName": "endSessions", "databaseName": "admin", "requestId": 1044788124, "operationId": 1044788124, "driverConnectionId": 1, "serverConnectionId": 7989, "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6b"}, "message": "Connection checked in", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd6b"}, "serverHost": "localhost", "serverPort": 27017, "message": "Stopped server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6b"}, "message": "Connection closed", "serverHost": "localhost", "serverPort": 27017, "driverConnectionId": 1, "reason": "Connection pool was closed", "error": "poolClosed"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6b"}, "message": "Connection pool closed", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd6b"}, "previousDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd6b, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Standalone, rtt: 0.000368167064152658>]>", "newDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd6b, topology_type: Single, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd6b"}, "message": "Stopped topology monitoring"}
INFO:httpx:HTTP Request: GET http://testserver/rhythm-patterns/6785bea4dcb335bc68e6dd69 "HTTP/1.1 200 OK"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd6c"}, "message": "Starting topology monitoring"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd6c"}, "previousDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd6c, topology_type: Unknown, servers: []>", "newDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd6c, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd6c"}, "serverHost": "localhost", "serverPort": 27017, "message": "Starting server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6c"}, "message": "Connection pool created", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd6c"}, "driverConnectionId": 1, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "message": "Server heartbeat started"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd6c"}, "serverHost": "localhost", "serverPort": 27017, "message": "Stopped server monitoring"}
DEBUG:pymongo.connection:{"clientId": {"$oid": "6785bea4dcb335bc68e6dd6c"}, "message": "Connection pool closed", "serverHost": "localhost", "serverPort": 27017}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd6c"}, "previousDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd6c, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "newDescription": "<TopologyDescription id: 6785bea4dcb335bc68e6dd6c, topology_type: Unknown, servers: [<ServerDescription ('localhost', 27017) server_type: Unknown, rtt: None>]>", "message": "Topology description changed"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd6c"}, "message": "Stopped topology monitoring"}
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd6c"}, "serverHost": "localhost", "serverPort": 27017, "awaited": false, "durationMS": 2.0329169929027557, "failure": "\"_OperationCancelled('operation cancelled')\"", "message": "Server heartbeat failed"}
INFO:httpx:HTTP Request: GET http://testserver/rhythm-patterns/invalid_id "HTTP/1.1 422 Unprocessable Entity"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
INFO:httpx:HTTP Request: GET http://testserver/rhythm-patterns "HTTP/1.1 200 OK"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
INFO:httpx:HTTP Request: GET http://testserver/rhythm-patterns/6785bea4dcb335bc68e6dd71 "HTTP/1.1 200 OK"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
INFO:httpx:HTTP Request: GET http://testserver/chord-progressions "HTTP/1.1 200 OK"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
INFO:httpx:HTTP Request: GET http://testserver/chord-progressions/6785bea4dcb335bc68e6dd6d "HTTP/1.1 200 OK"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
INFO:httpx:HTTP Request: GET http://testserver/note-patterns "HTTP/1.1 200 OK"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
INFO:httpx:HTTP Request: GET http://testserver/note-patterns/6785bea4dcb335bc68e6dd6f "HTTP/1.1 200 OK"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
INFO:httpx:HTTP Request: POST http://testserver/note-patterns "HTTP/1.1 409 Conflict"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:backend.tests.conftest:Mock MongoDB client set up.
DEBUG:asyncio:Using selector: KqueueSelector
INFO:httpx:HTTP Request: POST http://testserver/rhythm-patterns "HTTP/1.1 409 Conflict"
DEBUG:backend.tests.conftest:Mock MongoDB client restored.
DEBUG:pymongo.topology:{"topologyId": {"$oid": "6785bea4dcb335bc68e6dd5d"}, "serverHost": "localhost", "serverPort": 27017, "awaited": true, "durationMS": 500.8305419469252, "failure": "\"_OperationCancelled('operation cancelled')\"", "message": "Server heartbeat failed"}
